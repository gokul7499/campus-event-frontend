{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'../../utils/axios';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const HealthCheck=()=>{const[healthStatus,setHealthStatus]=useState('checking');const[lastChecked,setLastChecked]=useState(null);const checkHealth=async()=>{try{setHealthStatus('checking');const response=await axios.get('/api/health');if(response.status===200){setHealthStatus('healthy');setLastChecked(new Date().toLocaleTimeString());}else{setHealthStatus('unhealthy');}}catch(error){console.error('Health check failed:',error);setHealthStatus('unhealthy');setLastChecked(new Date().toLocaleTimeString());}};useEffect(()=>{checkHealth();// Check health every 30 seconds\nconst interval=setInterval(checkHealth,30000);return()=>clearInterval(interval);},[]);const getStatusColor=()=>{switch(healthStatus){case'healthy':return'text-success';case'unhealthy':return'text-danger';case'checking':return'text-warning';default:return'text-muted';}};const getStatusIcon=()=>{switch(healthStatus){case'healthy':return'✅';case'unhealthy':return'❌';case'checking':return'⏳';default:return'❓';}};return/*#__PURE__*/_jsxs(\"div\",{className:\"health-check d-flex align-items-center\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"me-2 \".concat(getStatusColor()),children:[getStatusIcon(),\" Backend: \",healthStatus]}),lastChecked&&/*#__PURE__*/_jsxs(\"small\",{className:\"text-muted\",children:[\"(Last checked: \",lastChecked,\")\"]}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-sm btn-outline-secondary ms-2\",onClick:checkHealth,disabled:healthStatus==='checking',children:\"Refresh\"})]});};export default HealthCheck;","map":{"version":3,"names":["React","useState","useEffect","axios","jsxs","_jsxs","jsx","_jsx","HealthCheck","healthStatus","setHealthStatus","lastChecked","setLastChecked","checkHealth","response","get","status","Date","toLocaleTimeString","error","console","interval","setInterval","clearInterval","getStatusColor","getStatusIcon","className","children","concat","onClick","disabled"],"sources":["C:/Users/Baap/Desktop/campus-event-management/campus-event-frontend/src/components/common/HealthCheck.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from '../../utils/axios';\r\n\r\nconst HealthCheck = () => {\r\n  const [healthStatus, setHealthStatus] = useState('checking');\r\n  const [lastChecked, setLastChecked] = useState(null);\r\n\r\n  const checkHealth = async () => {\r\n    try {\r\n      setHealthStatus('checking');\r\n      const response = await axios.get('/api/health');\r\n      \r\n      if (response.status === 200) {\r\n        setHealthStatus('healthy');\r\n        setLastChecked(new Date().toLocaleTimeString());\r\n      } else {\r\n        setHealthStatus('unhealthy');\r\n      }\r\n    } catch (error) {\r\n      console.error('Health check failed:', error);\r\n      setHealthStatus('unhealthy');\r\n      setLastChecked(new Date().toLocaleTimeString());\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkHealth();\r\n    // Check health every 30 seconds\r\n    const interval = setInterval(checkHealth, 30000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const getStatusColor = () => {\r\n    switch (healthStatus) {\r\n      case 'healthy': return 'text-success';\r\n      case 'unhealthy': return 'text-danger';\r\n      case 'checking': return 'text-warning';\r\n      default: return 'text-muted';\r\n    }\r\n  };\r\n\r\n  const getStatusIcon = () => {\r\n    switch (healthStatus) {\r\n      case 'healthy': return '✅';\r\n      case 'unhealthy': return '❌';\r\n      case 'checking': return '⏳';\r\n      default: return '❓';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"health-check d-flex align-items-center\">\r\n      <span className={`me-2 ${getStatusColor()}`}>\r\n        {getStatusIcon()} Backend: {healthStatus}\r\n      </span>\r\n      {lastChecked && (\r\n        <small className=\"text-muted\">\r\n          (Last checked: {lastChecked})\r\n        </small>\r\n      )}\r\n      <button \r\n        className=\"btn btn-sm btn-outline-secondary ms-2\"\r\n        onClick={checkHealth}\r\n        disabled={healthStatus === 'checking'}\r\n      >\r\n        Refresh\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HealthCheck;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,KAAK,KAAM,mBAAmB,CAAC,OAAAC,IAAA,IAAAC,KAAA,CAAAC,GAAA,IAAAC,IAAA,yBAEtC,KAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,CACxB,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAC,CAAGT,QAAQ,CAAC,UAAU,CAAC,CAC5D,KAAM,CAACU,WAAW,CAAEC,cAAc,CAAC,CAAGX,QAAQ,CAAC,IAAI,CAAC,CAEpD,KAAM,CAAAY,WAAW,CAAG,KAAAA,CAAA,GAAY,CAC9B,GAAI,CACFH,eAAe,CAAC,UAAU,CAAC,CAC3B,KAAM,CAAAI,QAAQ,CAAG,KAAM,CAAAX,KAAK,CAACY,GAAG,CAAC,aAAa,CAAC,CAE/C,GAAID,QAAQ,CAACE,MAAM,GAAK,GAAG,CAAE,CAC3BN,eAAe,CAAC,SAAS,CAAC,CAC1BE,cAAc,CAAC,GAAI,CAAAK,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAC,CAAC,CACjD,CAAC,IAAM,CACLR,eAAe,CAAC,WAAW,CAAC,CAC9B,CACF,CAAE,MAAOS,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC5CT,eAAe,CAAC,WAAW,CAAC,CAC5BE,cAAc,CAAC,GAAI,CAAAK,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAC,CAAC,CACjD,CACF,CAAC,CAEDhB,SAAS,CAAC,IAAM,CACdW,WAAW,CAAC,CAAC,CACb;AACA,KAAM,CAAAQ,QAAQ,CAAGC,WAAW,CAACT,WAAW,CAAE,KAAK,CAAC,CAChD,MAAO,IAAMU,aAAa,CAACF,QAAQ,CAAC,CACtC,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAG,cAAc,CAAGA,CAAA,GAAM,CAC3B,OAAQf,YAAY,EAClB,IAAK,SAAS,CAAE,MAAO,cAAc,CACrC,IAAK,WAAW,CAAE,MAAO,aAAa,CACtC,IAAK,UAAU,CAAE,MAAO,cAAc,CACtC,QAAS,MAAO,YAAY,CAC9B,CACF,CAAC,CAED,KAAM,CAAAgB,aAAa,CAAGA,CAAA,GAAM,CAC1B,OAAQhB,YAAY,EAClB,IAAK,SAAS,CAAE,MAAO,GAAG,CAC1B,IAAK,WAAW,CAAE,MAAO,GAAG,CAC5B,IAAK,UAAU,CAAE,MAAO,GAAG,CAC3B,QAAS,MAAO,GAAG,CACrB,CACF,CAAC,CAED,mBACEJ,KAAA,QAAKqB,SAAS,CAAC,wCAAwC,CAAAC,QAAA,eACrDtB,KAAA,SAAMqB,SAAS,SAAAE,MAAA,CAAUJ,cAAc,CAAC,CAAC,CAAG,CAAAG,QAAA,EACzCF,aAAa,CAAC,CAAC,CAAC,YAAU,CAAChB,YAAY,EACpC,CAAC,CACNE,WAAW,eACVN,KAAA,UAAOqB,SAAS,CAAC,YAAY,CAAAC,QAAA,EAAC,iBACb,CAAChB,WAAW,CAAC,GAC9B,EAAO,CACR,cACDJ,IAAA,WACEmB,SAAS,CAAC,uCAAuC,CACjDG,OAAO,CAAEhB,WAAY,CACrBiB,QAAQ,CAAErB,YAAY,GAAK,UAAW,CAAAkB,QAAA,CACvC,SAED,CAAQ,CAAC,EACN,CAAC,CAEV,CAAC,CAED,cAAe,CAAAnB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}