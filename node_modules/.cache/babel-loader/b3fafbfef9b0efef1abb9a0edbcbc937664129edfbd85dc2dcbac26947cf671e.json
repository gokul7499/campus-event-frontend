{"ast":null,"code":"// Authentication Test Utility\n// Use this in browser console to test authentication flow\nexport const testAuth={// Check current authentication state\ncheckState:()=>{const token=localStorage.getItem('token');console.log('🔐 Current Auth State:');console.log('Token exists:',!!token);console.log('Token value:',token?\"\".concat(token.substring(0,20),\"...\"):'None');console.log('LocalStorage keys:',Object.keys(localStorage));},// Test token validation\ntestToken:async()=>{try{const response=await fetch('/api/auth/me',{headers:{'Authorization':\"Bearer \".concat(localStorage.getItem('token')),'Content-Type':'application/json'}});console.log('🔍 Token Test Result:');console.log('Status:',response.status);console.log('Response:',await response.json());return response.ok;}catch(error){console.error('❌ Token test failed:',error);return false;}},// Clear authentication\nclearAuth:()=>{localStorage.removeItem('token');console.log('🧹 Authentication cleared');},// Simulate login (for testing)\nsimulateLogin:function(){let testToken=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'test-token-123';localStorage.setItem('token',testToken);console.log('🎭 Simulated login with test token');}};// Make it available globally for console testing\nif(typeof window!=='undefined'){window.testAuth=testAuth;}","map":{"version":3,"names":["testAuth","checkState","token","localStorage","getItem","console","log","concat","substring","Object","keys","testToken","response","fetch","headers","status","json","ok","error","clearAuth","removeItem","simulateLogin","arguments","length","undefined","setItem","window"],"sources":["C:/Users/Baap/Desktop/u18/frontend/src/utils/testAuth.js"],"sourcesContent":["// Authentication Test Utility\r\n// Use this in browser console to test authentication flow\r\n\r\nexport const testAuth = {\r\n  // Check current authentication state\r\n  checkState: () => {\r\n    const token = localStorage.getItem('token');\r\n    console.log('🔐 Current Auth State:');\r\n    console.log('Token exists:', !!token);\r\n    console.log('Token value:', token ? `${token.substring(0, 20)}...` : 'None');\r\n    console.log('LocalStorage keys:', Object.keys(localStorage));\r\n  },\r\n\r\n  // Test token validation\r\n  testToken: async () => {\r\n    try {\r\n      const response = await fetch('/api/auth/me', {\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n      \r\n      console.log('🔍 Token Test Result:');\r\n      console.log('Status:', response.status);\r\n      console.log('Response:', await response.json());\r\n      \r\n      return response.ok;\r\n    } catch (error) {\r\n      console.error('❌ Token test failed:', error);\r\n      return false;\r\n    }\r\n  },\r\n\r\n  // Clear authentication\r\n  clearAuth: () => {\r\n    localStorage.removeItem('token');\r\n    console.log('🧹 Authentication cleared');\r\n  },\r\n\r\n  // Simulate login (for testing)\r\n  simulateLogin: (testToken = 'test-token-123') => {\r\n    localStorage.setItem('token', testToken);\r\n    console.log('🎭 Simulated login with test token');\r\n  }\r\n};\r\n\r\n// Make it available globally for console testing\r\nif (typeof window !== 'undefined') {\r\n  window.testAuth = testAuth;\r\n}\r\n"],"mappings":"AAAA;AACA;AAEA,MAAO,MAAM,CAAAA,QAAQ,CAAG,CACtB;AACAC,UAAU,CAAEA,CAAA,GAAM,CAChB,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3CC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC,CACrCD,OAAO,CAACC,GAAG,CAAC,eAAe,CAAE,CAAC,CAACJ,KAAK,CAAC,CACrCG,OAAO,CAACC,GAAG,CAAC,cAAc,CAAEJ,KAAK,IAAAK,MAAA,CAAML,KAAK,CAACM,SAAS,CAAC,CAAC,CAAE,EAAE,CAAC,QAAQ,MAAM,CAAC,CAC5EH,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAEG,MAAM,CAACC,IAAI,CAACP,YAAY,CAAC,CAAC,CAC9D,CAAC,CAED;AACAQ,SAAS,CAAE,KAAAA,CAAA,GAAY,CACrB,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,cAAc,CAAE,CAC3CC,OAAO,CAAE,CACP,eAAe,WAAAP,MAAA,CAAYJ,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAE,CAC1D,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEFC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC,CACpCD,OAAO,CAACC,GAAG,CAAC,SAAS,CAAEM,QAAQ,CAACG,MAAM,CAAC,CACvCV,OAAO,CAACC,GAAG,CAAC,WAAW,CAAE,KAAM,CAAAM,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC,CAE/C,MAAO,CAAAJ,QAAQ,CAACK,EAAE,CACpB,CAAE,MAAOC,KAAK,CAAE,CACdb,OAAO,CAACa,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC5C,MAAO,MAAK,CACd,CACF,CAAC,CAED;AACAC,SAAS,CAAEA,CAAA,GAAM,CACfhB,YAAY,CAACiB,UAAU,CAAC,OAAO,CAAC,CAChCf,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC,CAC1C,CAAC,CAED;AACAe,aAAa,CAAE,QAAAA,CAAA,CAAkC,IAAjC,CAAAV,SAAS,CAAAW,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,gBAAgB,CAC1CnB,YAAY,CAACsB,OAAO,CAAC,OAAO,CAAEd,SAAS,CAAC,CACxCN,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC,CACnD,CACF,CAAC,CAED;AACA,GAAI,MAAO,CAAAoB,MAAM,GAAK,WAAW,CAAE,CACjCA,MAAM,CAAC1B,QAAQ,CAAGA,QAAQ,CAC5B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}