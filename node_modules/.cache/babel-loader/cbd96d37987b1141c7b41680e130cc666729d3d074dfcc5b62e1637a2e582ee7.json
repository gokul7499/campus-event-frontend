{"ast":null,"code":"import _objectSpread from\"C:/Users/Baap/Desktop/campus-event-management/campus-event-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// Test Backend Connectivity from Frontend\nconst testBackend=async()=>{const BASE_URL='https://campus-event-backend.onrender.com';console.log('ðŸ§ª Testing Backend Connectivity...\\n');console.log(\"\\uD83D\\uDCCD Backend URL: \".concat(BASE_URL,\"\\n\"));const tests=[{name:'Health Check',url:'/api/health',method:'GET'},{name:'Test Endpoint',url:'/api/test',method:'GET'},{name:'Auth Register',url:'/api/auth/register',method:'POST',data:{test:true}},{name:'Auth Login',url:'/api/auth/login',method:'POST',data:{test:true}}];for(const test of tests){try{console.log(\"\\uD83D\\uDD0D Testing: \".concat(test.name));console.log(\"\\uD83D\\uDCDD \".concat(test.method,\" \").concat(test.url));const response=await fetch(\"\".concat(BASE_URL).concat(test.url),_objectSpread({method:test.method,headers:{'Content-Type':'application/json'}},test.data&&{body:JSON.stringify(test.data)}));console.log(\"\\u2705 Status: \".concat(response.status));if(response.ok){const data=await response.json();console.log(\"\\uD83D\\uDCCA Response:\",data);}else{const errorData=await response.json();console.log(\"\\u274C Error Response:\",errorData);}console.log('â”€'.repeat(50));}catch(error){console.log(\"\\u274C Network Error: \".concat(error.message));console.log('â”€'.repeat(50));}}};// Run tests if in browser\nif(typeof window!=='undefined'){window.testBackend=testBackend;console.log('ðŸ§ª Backend test function available as: window.testBackend()');}else{// Node.js environment\ntestBackend().catch(console.error);}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}