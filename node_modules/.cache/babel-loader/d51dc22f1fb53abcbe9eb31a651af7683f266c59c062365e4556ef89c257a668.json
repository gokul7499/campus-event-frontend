{"ast":null,"code":"\"use client\";\n\nimport _objectSpread from \"C:/Users/Baap/Desktop/campus-event-management/campus-event-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"C:/Users/Baap/Desktop/campus-event-management/campus-event-frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"onHide\"];\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport Offcanvas from './Offcanvas';\nimport NavbarContext from './NavbarContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavbarOffcanvas = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      onHide\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  const context = useContext(NavbarContext);\n  const handleHide = useEventCallback(() => {\n    context == null || context.onToggle == null || context.onToggle();\n    onHide == null || onHide();\n  });\n  return /*#__PURE__*/_jsx(Offcanvas, _objectSpread(_objectSpread({\n    ref: ref,\n    show: !!(context != null && context.expanded)\n  }, props), {}, {\n    renderStaticNode: true,\n    onHide: handleHide\n  }));\n});\nNavbarOffcanvas.displayName = 'NavbarOffcanvas';\nexport default NavbarOffcanvas;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}