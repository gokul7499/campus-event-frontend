{"ast":null,"code":"\"use client\";\n\nimport _objectSpread from \"C:/Users/Baap/Desktop/campus-event-management/campus-event-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"C:/Users/Baap/Desktop/campus-event-management/campus-event-frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"bsPrefix\", \"show\", \"closeLabel\", \"closeVariant\", \"className\", \"children\", \"variant\", \"onClose\", \"dismissible\", \"transition\"];\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AlertHeading from './AlertHeading';\nimport AlertLink from './AlertLink';\nimport Fade from './Fade';\nimport CloseButton from './CloseButton';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst Alert = /*#__PURE__*/React.forwardRef((uncontrolledProps, ref) => {\n  const _useUncontrolled = useUncontrolled(uncontrolledProps, {\n      show: 'onClose'\n    }),\n    {\n      bsPrefix,\n      show = true,\n      closeLabel = 'Close alert',\n      closeVariant,\n      className,\n      children,\n      variant = 'primary',\n      onClose,\n      dismissible,\n      transition = Fade\n    } = _useUncontrolled,\n    props = _objectWithoutProperties(_useUncontrolled, _excluded);\n  const prefix = useBootstrapPrefix(bsPrefix, 'alert');\n  const handleClose = useEventCallback(e => {\n    if (onClose) {\n      onClose(false, e);\n    }\n  });\n  const Transition = transition === true ? Fade : transition;\n  const alert = /*#__PURE__*/_jsxs(\"div\", _objectSpread(_objectSpread({\n    role: \"alert\"\n  }, !Transition ? props : undefined), {}, {\n    ref: ref,\n    className: classNames(className, prefix, variant && \"\".concat(prefix, \"-\").concat(variant), dismissible && \"\".concat(prefix, \"-dismissible\")),\n    children: [dismissible && /*#__PURE__*/_jsx(CloseButton, {\n      onClick: handleClose,\n      \"aria-label\": closeLabel,\n      variant: closeVariant\n    }), children]\n  }));\n  if (!Transition) return show ? alert : null;\n  return /*#__PURE__*/_jsx(Transition, _objectSpread(_objectSpread({\n    unmountOnExit: true\n  }, props), {}, {\n    ref: undefined,\n    in: show,\n    children: alert\n  }));\n});\nAlert.displayName = 'Alert';\nexport default Object.assign(Alert, {\n  Link: AlertLink,\n  Heading: AlertHeading\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}