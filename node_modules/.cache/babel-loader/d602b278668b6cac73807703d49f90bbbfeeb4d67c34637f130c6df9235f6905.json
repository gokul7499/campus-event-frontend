{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{io}from'socket.io-client';import{useAuth}from'./AuthContext';import config from'../config/config';import{jsx as _jsx}from\"react/jsx-runtime\";const SocketContext=/*#__PURE__*/createContext();export const SocketProvider=_ref=>{let{children}=_ref;const[socket,setSocket]=useState(null);const[connected,setConnected]=useState(false);const{user}=useAuth();useEffect(()=>{if(user){const newSocket=io(config.socket.url,{auth:{userId:user._id}});// Connection event handlers\nnewSocket.on('connect',()=>{console.log('Socket connected:',newSocket.id);setConnected(true);// Join user's personal room\nnewSocket.emit('join',user._id);});newSocket.on('disconnect',()=>{console.log('Socket disconnected');setConnected(false);});newSocket.on('connect_error',error=>{console.error('Socket connection error:',error);setConnected(false);});setSocket(newSocket);return()=>{newSocket.close();setSocket(null);setConnected(false);};}else{if(socket){socket.close();setSocket(null);setConnected(false);}}},[user,socket]);// Send notification\nconst sendNotification=data=>{if(socket&&connected){socket.emit('send_notification',data);}};// Send event update\nconst sendEventUpdate=data=>{if(socket&&connected){socket.emit('event_update',data);}};// Subscribe to notifications\nconst onNotification=callback=>{if(socket){socket.on('notification',callback);// Return cleanup function\nreturn()=>socket.off('notification',callback);}};// Subscribe to event updates\nconst onEventUpdate=callback=>{if(socket){socket.on('event_updated',callback);// Return cleanup function\nreturn()=>socket.off('event_updated',callback);}};// Subscribe to real-time registration updates\nconst onRegistrationUpdate=callback=>{if(socket){socket.on('registration_update',callback);// Return cleanup function\nreturn()=>socket.off('registration_update',callback);}};// Join event room (for real-time updates during events)\nconst joinEventRoom=eventId=>{if(socket&&connected){socket.emit('join_event',eventId);}};// Leave event room\nconst leaveEventRoom=eventId=>{if(socket&&connected){socket.emit('leave_event',eventId);}};// Send message to event room\nconst sendEventMessage=(eventId,message)=>{if(socket&&connected){socket.emit('event_message',{eventId,message});}};// Subscribe to event messages\nconst onEventMessage=callback=>{if(socket){socket.on('event_message',callback);// Return cleanup function\nreturn()=>socket.off('event_message',callback);}};const value={socket,connected,sendNotification,sendEventUpdate,onNotification,onEventUpdate,onRegistrationUpdate,joinEventRoom,leaveEventRoom,sendEventMessage,onEventMessage};return/*#__PURE__*/_jsx(SocketContext.Provider,{value:value,children:children});};export const useSocket=()=>{const context=useContext(SocketContext);if(!context){throw new Error('useSocket must be used within a SocketProvider');}return context;};export default SocketContext;","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","io","useAuth","config","jsx","_jsx","SocketContext","SocketProvider","_ref","children","socket","setSocket","connected","setConnected","user","newSocket","url","auth","userId","_id","on","console","log","id","emit","error","close","sendNotification","data","sendEventUpdate","onNotification","callback","off","onEventUpdate","onRegistrationUpdate","joinEventRoom","eventId","leaveEventRoom","sendEventMessage","message","onEventMessage","value","Provider","useSocket","context","Error"],"sources":["C:/Users/Baap/Desktop/u18/frontend/src/context/SocketContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport { useAuth } from './AuthContext';\nimport config from '../config/config';\n\nconst SocketContext = createContext();\n\nexport const SocketProvider = ({ children }) => {\n  const [socket, setSocket] = useState(null);\n  const [connected, setConnected] = useState(false);\n  const { user } = useAuth();\n\n  useEffect(() => {\n    if (user) {\n      \n      const newSocket = io(config.socket.url, {\n        auth: {\n          userId: user._id\n        }\n      });\n\n      // Connection event handlers\n      newSocket.on('connect', () => {\n        console.log('Socket connected:', newSocket.id);\n        setConnected(true);\n        \n        // Join user's personal room\n        newSocket.emit('join', user._id);\n      });\n\n      newSocket.on('disconnect', () => {\n        console.log('Socket disconnected');\n        setConnected(false);\n      });\n\n      newSocket.on('connect_error', (error) => {\n        console.error('Socket connection error:', error);\n        setConnected(false);\n      });\n\n      setSocket(newSocket);\n\n      return () => {\n        newSocket.close();\n        setSocket(null);\n        setConnected(false);\n      };\n    } else {\n      \n      if (socket) {\n        socket.close();\n        setSocket(null);\n        setConnected(false);\n      }\n    }\n  }, [user, socket]);\n\n  // Send notification\n  const sendNotification = (data) => {\n    if (socket && connected) {\n      socket.emit('send_notification', data);\n    }\n  };\n\n  // Send event update\n  const sendEventUpdate = (data) => {\n    if (socket && connected) {\n      socket.emit('event_update', data);\n    }\n  };\n\n  // Subscribe to notifications\n  const onNotification = (callback) => {\n    if (socket) {\n      socket.on('notification', callback);\n      \n      // Return cleanup function\n      return () => socket.off('notification', callback);\n    }\n  };\n\n  // Subscribe to event updates\n  const onEventUpdate = (callback) => {\n    if (socket) {\n      socket.on('event_updated', callback);\n      \n      // Return cleanup function\n      return () => socket.off('event_updated', callback);\n    }\n  };\n\n  // Subscribe to real-time registration updates\n  const onRegistrationUpdate = (callback) => {\n    if (socket) {\n      socket.on('registration_update', callback);\n      \n      // Return cleanup function\n      return () => socket.off('registration_update', callback);\n    }\n  };\n\n  // Join event room (for real-time updates during events)\n  const joinEventRoom = (eventId) => {\n    if (socket && connected) {\n      socket.emit('join_event', eventId);\n    }\n  };\n\n  // Leave event room\n  const leaveEventRoom = (eventId) => {\n    if (socket && connected) {\n      socket.emit('leave_event', eventId);\n    }\n  };\n\n  // Send message to event room\n  const sendEventMessage = (eventId, message) => {\n    if (socket && connected) {\n      socket.emit('event_message', { eventId, message });\n    }\n  };\n\n  // Subscribe to event messages\n  const onEventMessage = (callback) => {\n    if (socket) {\n      socket.on('event_message', callback);\n      \n      // Return cleanup function\n      return () => socket.off('event_message', callback);\n    }\n  };\n\n  const value = {\n    socket,\n    connected,\n    sendNotification,\n    sendEventUpdate,\n    onNotification,\n    onEventUpdate,\n    onRegistrationUpdate,\n    joinEventRoom,\n    leaveEventRoom,\n    sendEventMessage,\n    onEventMessage\n  };\n\n  return (\n    <SocketContext.Provider value={value}>\n      {children}\n    </SocketContext.Provider>\n  );\n};\n\nexport const useSocket = () => {\n  const context = useContext(SocketContext);\n  if (!context) {\n    throw new Error('useSocket must be used within a SocketProvider');\n  }\n  return context;\n};\n\nexport default SocketContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}