{"ast":null,"code":"import _objectSpread from\"C:/Users/Baap/Desktop/u18/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// Test Backend Connectivity from Frontend\nconst testBackend=async()=>{const BASE_URL='https://campus-event-backend.onrender.com';console.log('üß™ Testing Backend Connectivity...\\n');console.log(\"\\uD83D\\uDCCD Backend URL: \".concat(BASE_URL,\"\\n\"));const tests=[{name:'Health Check',url:'/api/health',method:'GET'},{name:'Test Endpoint',url:'/api/test',method:'GET'},{name:'Auth Register',url:'/api/auth/register',method:'POST',data:{test:true}},{name:'Auth Login',url:'/api/auth/login',method:'POST',data:{test:true}}];for(const test of tests){try{console.log(\"\\uD83D\\uDD0D Testing: \".concat(test.name));console.log(\"\\uD83D\\uDCDD \".concat(test.method,\" \").concat(test.url));const response=await fetch(\"\".concat(BASE_URL).concat(test.url),_objectSpread({method:test.method,headers:{'Content-Type':'application/json'}},test.data&&{body:JSON.stringify(test.data)}));console.log(\"\\u2705 Status: \".concat(response.status));if(response.ok){const data=await response.json();console.log(\"\\uD83D\\uDCCA Response:\",data);}else{const errorData=await response.json();console.log(\"\\u274C Error Response:\",errorData);}console.log('‚îÄ'.repeat(50));}catch(error){console.log(\"\\u274C Network Error: \".concat(error.message));console.log('‚îÄ'.repeat(50));}}};// Run tests if in browser\nif(typeof window!=='undefined'){window.testBackend=testBackend;console.log('üß™ Backend test function available as: window.testBackend()');}else{// Node.js environment\ntestBackend().catch(console.error);}","map":{"version":3,"names":["testBackend","BASE_URL","console","log","concat","tests","name","url","method","data","test","response","fetch","_objectSpread","headers","body","JSON","stringify","status","ok","json","errorData","repeat","error","message","window","catch"],"sources":["C:/Users/Baap/Desktop/u18/frontend/src/test-backend.js"],"sourcesContent":["// Test Backend Connectivity from Frontend\r\nconst testBackend = async () => {\r\n  const BASE_URL = 'https://campus-event-backend.onrender.com';\r\n  \r\n  console.log('üß™ Testing Backend Connectivity...\\n');\r\n  console.log(`üìç Backend URL: ${BASE_URL}\\n`);\r\n\r\n  const tests = [\r\n    {\r\n      name: 'Health Check',\r\n      url: '/api/health',\r\n      method: 'GET'\r\n    },\r\n    {\r\n      name: 'Test Endpoint',\r\n      url: '/api/test',\r\n      method: 'GET'\r\n    },\r\n    {\r\n      name: 'Auth Register',\r\n      url: '/api/auth/register',\r\n      method: 'POST',\r\n      data: { test: true }\r\n    },\r\n    {\r\n      name: 'Auth Login',\r\n      url: '/api/auth/login',\r\n      method: 'POST',\r\n      data: { test: true }\r\n    }\r\n  ];\r\n\r\n  for (const test of tests) {\r\n    try {\r\n      console.log(`üîç Testing: ${test.name}`);\r\n      console.log(`üìù ${test.method} ${test.url}`);\r\n      \r\n      const response = await fetch(`${BASE_URL}${test.url}`, {\r\n        method: test.method,\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        ...(test.data && { body: JSON.stringify(test.data) })\r\n      });\r\n      \r\n      console.log(`‚úÖ Status: ${response.status}`);\r\n      \r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        console.log(`üìä Response:`, data);\r\n      } else {\r\n        const errorData = await response.json();\r\n        console.log(`‚ùå Error Response:`, errorData);\r\n      }\r\n      \r\n      console.log('‚îÄ'.repeat(50));\r\n      \r\n    } catch (error) {\r\n      console.log(`‚ùå Network Error: ${error.message}`);\r\n      console.log('‚îÄ'.repeat(50));\r\n    }\r\n  }\r\n};\r\n\r\n// Run tests if in browser\r\nif (typeof window !== 'undefined') {\r\n  window.testBackend = testBackend;\r\n  console.log('üß™ Backend test function available as: window.testBackend()');\r\n} else {\r\n  // Node.js environment\r\n  testBackend().catch(console.error);\r\n}\r\n"],"mappings":"uHAAA;AACA,KAAM,CAAAA,WAAW,CAAG,KAAAA,CAAA,GAAY,CAC9B,KAAM,CAAAC,QAAQ,CAAG,2CAA2C,CAE5DC,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC,CACnDD,OAAO,CAACC,GAAG,8BAAAC,MAAA,CAAoBH,QAAQ,MAAI,CAAC,CAE5C,KAAM,CAAAI,KAAK,CAAG,CACZ,CACEC,IAAI,CAAE,cAAc,CACpBC,GAAG,CAAE,aAAa,CAClBC,MAAM,CAAE,KACV,CAAC,CACD,CACEF,IAAI,CAAE,eAAe,CACrBC,GAAG,CAAE,WAAW,CAChBC,MAAM,CAAE,KACV,CAAC,CACD,CACEF,IAAI,CAAE,eAAe,CACrBC,GAAG,CAAE,oBAAoB,CACzBC,MAAM,CAAE,MAAM,CACdC,IAAI,CAAE,CAAEC,IAAI,CAAE,IAAK,CACrB,CAAC,CACD,CACEJ,IAAI,CAAE,YAAY,CAClBC,GAAG,CAAE,iBAAiB,CACtBC,MAAM,CAAE,MAAM,CACdC,IAAI,CAAE,CAAEC,IAAI,CAAE,IAAK,CACrB,CAAC,CACF,CAED,IAAK,KAAM,CAAAA,IAAI,GAAI,CAAAL,KAAK,CAAE,CACxB,GAAI,CACFH,OAAO,CAACC,GAAG,0BAAAC,MAAA,CAAgBM,IAAI,CAACJ,IAAI,CAAE,CAAC,CACvCJ,OAAO,CAACC,GAAG,iBAAAC,MAAA,CAAOM,IAAI,CAACF,MAAM,MAAAJ,MAAA,CAAIM,IAAI,CAACH,GAAG,CAAE,CAAC,CAE5C,KAAM,CAAAI,QAAQ,CAAG,KAAM,CAAAC,KAAK,IAAAR,MAAA,CAAIH,QAAQ,EAAAG,MAAA,CAAGM,IAAI,CAACH,GAAG,EAAAM,aAAA,EACjDL,MAAM,CAAEE,IAAI,CAACF,MAAM,CACnBM,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,EACGJ,IAAI,CAACD,IAAI,EAAI,CAAEM,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACP,IAAI,CAACD,IAAI,CAAE,CAAC,CACrD,CAAC,CAEFP,OAAO,CAACC,GAAG,mBAAAC,MAAA,CAAcO,QAAQ,CAACO,MAAM,CAAE,CAAC,CAE3C,GAAIP,QAAQ,CAACQ,EAAE,CAAE,CACf,KAAM,CAAAV,IAAI,CAAG,KAAM,CAAAE,QAAQ,CAACS,IAAI,CAAC,CAAC,CAClClB,OAAO,CAACC,GAAG,0BAAiBM,IAAI,CAAC,CACnC,CAAC,IAAM,CACL,KAAM,CAAAY,SAAS,CAAG,KAAM,CAAAV,QAAQ,CAACS,IAAI,CAAC,CAAC,CACvClB,OAAO,CAACC,GAAG,0BAAsBkB,SAAS,CAAC,CAC7C,CAEAnB,OAAO,CAACC,GAAG,CAAC,GAAG,CAACmB,MAAM,CAAC,EAAE,CAAC,CAAC,CAE7B,CAAE,MAAOC,KAAK,CAAE,CACdrB,OAAO,CAACC,GAAG,0BAAAC,MAAA,CAAqBmB,KAAK,CAACC,OAAO,CAAE,CAAC,CAChDtB,OAAO,CAACC,GAAG,CAAC,GAAG,CAACmB,MAAM,CAAC,EAAE,CAAC,CAAC,CAC7B,CACF,CACF,CAAC,CAED;AACA,GAAI,MAAO,CAAAG,MAAM,GAAK,WAAW,CAAE,CACjCA,MAAM,CAACzB,WAAW,CAAGA,WAAW,CAChCE,OAAO,CAACC,GAAG,CAAC,6DAA6D,CAAC,CAC5E,CAAC,IAAM,CACL;AACAH,WAAW,CAAC,CAAC,CAAC0B,KAAK,CAACxB,OAAO,CAACqB,KAAK,CAAC,CACpC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}