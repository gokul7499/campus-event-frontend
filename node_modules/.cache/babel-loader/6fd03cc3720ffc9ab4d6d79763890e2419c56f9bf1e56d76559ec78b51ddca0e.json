{"ast":null,"code":"import axios from 'axios';\nimport config from '../config/config';\n\n// Create axios instance with base configuration\nconst axiosInstance = axios.create({\n  baseURL: config.api.baseURL,\n  timeout: config.api.timeout,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token\naxiosInstance.interceptors.request.use(config => {\n  var _config$method;\n  // Debug logging\n  console.log('üöÄ API Request:', {\n    method: (_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase(),\n    url: config.url,\n    baseURL: config.baseURL,\n    fullURL: `${config.baseURL}${config.url}`\n  });\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n    console.log('üîë Token added to request');\n  }\n  return config;\n}, error => {\n  console.error('‚ùå Request interceptor error:', error);\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle errors\naxiosInstance.interceptors.response.use(response => {\n  console.log('‚úÖ API Response:', {\n    status: response.status,\n    url: response.config.url,\n    data: response.data\n  });\n  return response;\n}, error => {\n  var _error$response, _error$response2, _error$config, _error$config2, _error$config3, _error$config3$method, _error$response3, _error$response4, _error$response5, _error$response6;\n  console.error('‚ùå API Error Details:', {\n    status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n    statusText: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.statusText,\n    message: error.message,\n    url: (_error$config = error.config) === null || _error$config === void 0 ? void 0 : _error$config.url,\n    baseURL: (_error$config2 = error.config) === null || _error$config2 === void 0 ? void 0 : _error$config2.baseURL,\n    fullURL: error.config ? `${error.config.baseURL}${error.config.url}` : 'Unknown',\n    method: (_error$config3 = error.config) === null || _error$config3 === void 0 ? void 0 : (_error$config3$method = _error$config3.method) === null || _error$config3$method === void 0 ? void 0 : _error$config3$method.toUpperCase(),\n    data: (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data,\n    headers: (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.headers\n  });\n\n  // Handle specific error types\n  if (((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.status) === 404) {\n    console.error('üö´ 404 Error: API endpoint not found. Check if backend is running and endpoints are correct.');\n    console.error('üîç Attempted URL:', error.config ? `${error.config.baseURL}${error.config.url}` : 'Unknown');\n  } else if (error.code === 'NETWORK_ERROR' || error.message === 'Network Error') {\n    console.error('üåê Network Error: Unable to connect to backend server. Please check your internet connection and try again.');\n  } else if (error.code === 'ECONNREFUSED') {\n    console.error('üîå Connection Refused: Backend server is not running or not accessible.');\n  }\n\n  // Only handle 401 errors for non-auth endpoints  \n  if (((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.status) === 401 && !error.config.url.includes('/auth/')) {\n    // Token expired or invalid for protected routes\n    localStorage.removeItem('token');\n    // Don't redirect immediately, let the component handle it\n    console.warn('Token expired, please login again');\n  }\n  return Promise.reject(error);\n});\nexport default axiosInstance;","map":{"version":3,"names":["axios","config","axiosInstance","create","baseURL","api","timeout","headers","interceptors","request","use","_config$method","console","log","method","toUpperCase","url","fullURL","token","localStorage","getItem","Authorization","error","Promise","reject","response","status","data","_error$response","_error$response2","_error$config","_error$config2","_error$config3","_error$config3$method","_error$response3","_error$response4","_error$response5","_error$response6","statusText","message","code","includes","removeItem","warn"],"sources":["C:/Users/Baap/Desktop/campus-event-management/campus-event-frontend/src/utils/axios.js"],"sourcesContent":["import axios from 'axios';\r\nimport config from '../config/config';\r\n\r\n// Create axios instance with base configuration\r\nconst axiosInstance = axios.create({\r\n  baseURL: config.api.baseURL,\r\n  timeout: config.api.timeout,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor to add auth token\r\naxiosInstance.interceptors.request.use(\r\n  (config) => {\r\n    // Debug logging\r\n    console.log('üöÄ API Request:', {\r\n      method: config.method?.toUpperCase(),\r\n      url: config.url,\r\n      baseURL: config.baseURL,\r\n      fullURL: `${config.baseURL}${config.url}`\r\n    });\r\n\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n      console.log('üîë Token added to request');\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.error('‚ùå Request interceptor error:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor to handle errors\r\naxiosInstance.interceptors.response.use(\r\n  (response) => {\r\n    console.log('‚úÖ API Response:', {\r\n      status: response.status,\r\n      url: response.config.url,\r\n      data: response.data\r\n    });\r\n    return response;\r\n  },\r\n  (error) => {\r\n    console.error('‚ùå API Error Details:', {\r\n      status: error.response?.status,\r\n      statusText: error.response?.statusText,\r\n      message: error.message,\r\n      url: error.config?.url,\r\n      baseURL: error.config?.baseURL,\r\n      fullURL: error.config ? `${error.config.baseURL}${error.config.url}` : 'Unknown',\r\n      method: error.config?.method?.toUpperCase(),\r\n      data: error.response?.data,\r\n      headers: error.response?.headers\r\n    });\r\n\r\n    // Handle specific error types\r\n    if (error.response?.status === 404) {\r\n      console.error('üö´ 404 Error: API endpoint not found. Check if backend is running and endpoints are correct.');\r\n      console.error('üîç Attempted URL:', error.config ? `${error.config.baseURL}${error.config.url}` : 'Unknown');\r\n    } else if (error.code === 'NETWORK_ERROR' || error.message === 'Network Error') {\r\n      console.error('üåê Network Error: Unable to connect to backend server. Please check your internet connection and try again.');\r\n    } else if (error.code === 'ECONNREFUSED') {\r\n      console.error('üîå Connection Refused: Backend server is not running or not accessible.');\r\n    }\r\n\r\n    // Only handle 401 errors for non-auth endpoints  \r\n    if (error.response?.status === 401 && !error.config.url.includes('/auth/')) {\r\n      // Token expired or invalid for protected routes\r\n      localStorage.removeItem('token');\r\n      // Don't redirect immediately, let the component handle it\r\n      console.warn('Token expired, please login again');\r\n    }\r\n    \r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosInstance;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}