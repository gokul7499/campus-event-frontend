{"ast":null,"code":"// Authentication Test Utility\n// Use this in browser console to test authentication flow\n\nexport const testAuth = {\n  // Check current authentication state\n  checkState: () => {\n    const token = localStorage.getItem('token');\n    console.log('🔐 Current Auth State:');\n    console.log('Token exists:', !!token);\n    console.log('Token value:', token ? `${token.substring(0, 20)}...` : 'None');\n    console.log('LocalStorage keys:', Object.keys(localStorage));\n  },\n  // Test token validation\n  testToken: async () => {\n    try {\n      const response = await fetch('/api/auth/me', {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('🔍 Token Test Result:');\n      console.log('Status:', response.status);\n      console.log('Response:', await response.json());\n      return response.ok;\n    } catch (error) {\n      console.error('❌ Token test failed:', error);\n      return false;\n    }\n  },\n  // Clear authentication\n  clearAuth: () => {\n    localStorage.removeItem('token');\n    console.log('🧹 Authentication cleared');\n  },\n  // Simulate login (for testing)\n  simulateLogin: (testToken = 'test-token-123') => {\n    localStorage.setItem('token', testToken);\n    console.log('🎭 Simulated login with test token');\n  }\n};\n\n// Make it available globally for console testing\nif (typeof window !== 'undefined') {\n  window.testAuth = testAuth;\n}","map":{"version":3,"names":["testAuth","checkState","token","localStorage","getItem","console","log","substring","Object","keys","testToken","response","fetch","headers","status","json","ok","error","clearAuth","removeItem","simulateLogin","setItem","window"],"sources":["C:/Users/Baap/Desktop/u18/frontend/src/utils/testAuth.js"],"sourcesContent":["// Authentication Test Utility\r\n// Use this in browser console to test authentication flow\r\n\r\nexport const testAuth = {\r\n  // Check current authentication state\r\n  checkState: () => {\r\n    const token = localStorage.getItem('token');\r\n    console.log('🔐 Current Auth State:');\r\n    console.log('Token exists:', !!token);\r\n    console.log('Token value:', token ? `${token.substring(0, 20)}...` : 'None');\r\n    console.log('LocalStorage keys:', Object.keys(localStorage));\r\n  },\r\n\r\n  // Test token validation\r\n  testToken: async () => {\r\n    try {\r\n      const response = await fetch('/api/auth/me', {\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n      \r\n      console.log('🔍 Token Test Result:');\r\n      console.log('Status:', response.status);\r\n      console.log('Response:', await response.json());\r\n      \r\n      return response.ok;\r\n    } catch (error) {\r\n      console.error('❌ Token test failed:', error);\r\n      return false;\r\n    }\r\n  },\r\n\r\n  // Clear authentication\r\n  clearAuth: () => {\r\n    localStorage.removeItem('token');\r\n    console.log('🧹 Authentication cleared');\r\n  },\r\n\r\n  // Simulate login (for testing)\r\n  simulateLogin: (testToken = 'test-token-123') => {\r\n    localStorage.setItem('token', testToken);\r\n    console.log('🎭 Simulated login with test token');\r\n  }\r\n};\r\n\r\n// Make it available globally for console testing\r\nif (typeof window !== 'undefined') {\r\n  window.testAuth = testAuth;\r\n}\r\n"],"mappings":"AAAA;AACA;;AAEA,OAAO,MAAMA,QAAQ,GAAG;EACtB;EACAC,UAAU,EAAEA,CAAA,KAAM;IAChB,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3CC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;IACrCD,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE,CAAC,CAACJ,KAAK,CAAC;IACrCG,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEJ,KAAK,GAAG,GAAGA,KAAK,CAACK,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,KAAK,GAAG,MAAM,CAAC;IAC5EF,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEE,MAAM,CAACC,IAAI,CAACN,YAAY,CAAC,CAAC;EAC9D,CAAC;EAED;EACAO,SAAS,EAAE,MAAAA,CAAA,KAAY;IACrB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,cAAc,EAAE;QAC3CC,OAAO,EAAE;UACP,eAAe,EAAE,UAAUV,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE;UAC1D,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEFC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;MACpCD,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEK,QAAQ,CAACG,MAAM,CAAC;MACvCT,OAAO,CAACC,GAAG,CAAC,WAAW,EAAE,MAAMK,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC;MAE/C,OAAOJ,QAAQ,CAACK,EAAE;IACpB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdZ,OAAO,CAACY,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C,OAAO,KAAK;IACd;EACF,CAAC;EAED;EACAC,SAAS,EAAEA,CAAA,KAAM;IACff,YAAY,CAACgB,UAAU,CAAC,OAAO,CAAC;IAChCd,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;EAC1C,CAAC;EAED;EACAc,aAAa,EAAEA,CAACV,SAAS,GAAG,gBAAgB,KAAK;IAC/CP,YAAY,CAACkB,OAAO,CAAC,OAAO,EAAEX,SAAS,CAAC;IACxCL,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;EACnD;AACF,CAAC;;AAED;AACA,IAAI,OAAOgB,MAAM,KAAK,WAAW,EAAE;EACjCA,MAAM,CAACtB,QAAQ,GAAGA,QAAQ;AAC5B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}