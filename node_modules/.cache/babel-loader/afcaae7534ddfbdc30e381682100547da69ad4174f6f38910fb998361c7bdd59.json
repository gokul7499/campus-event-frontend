{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Baap\\\\Desktop\\\\campus-event-management\\\\campus-event-frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport axios from '../utils/axios';\nimport config from '../config/config';\n\n// Initial state\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  user: null,\n  token: localStorage.getItem('token'),\n  loading: true,\n  error: null\n};\n\n// Action types\nconst AUTH_ACTIONS = {\n  LOGIN_START: 'LOGIN_START',\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  LOGIN_FAILURE: 'LOGIN_FAILURE',\n  LOGOUT: 'LOGOUT',\n  REGISTER_START: 'REGISTER_START',\n  REGISTER_SUCCESS: 'REGISTER_SUCCESS',\n  REGISTER_FAILURE: 'REGISTER_FAILURE',\n  LOAD_USER_START: 'LOAD_USER_START',\n  LOAD_USER_SUCCESS: 'LOAD_USER_SUCCESS',\n  LOAD_USER_FAILURE: 'LOAD_USER_FAILURE',\n  UPDATE_PROFILE_SUCCESS: 'UPDATE_PROFILE_SUCCESS',\n  CLEAR_ERROR: 'CLEAR_ERROR'\n};\n\n// Reducer\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case AUTH_ACTIONS.LOGIN_START:\n    case AUTH_ACTIONS.REGISTER_START:\n    case AUTH_ACTIONS.LOAD_USER_START:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case AUTH_ACTIONS.LOGIN_SUCCESS:\n    case AUTH_ACTIONS.REGISTER_SUCCESS:\n      localStorage.setItem('token', action.payload.token);\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        loading: false,\n        error: null\n      };\n    case AUTH_ACTIONS.LOAD_USER_SUCCESS:\n    case AUTH_ACTIONS.UPDATE_PROFILE_SUCCESS:\n      return {\n        ...state,\n        user: action.payload.user,\n        loading: false,\n        error: null\n      };\n    case AUTH_ACTIONS.LOGIN_FAILURE:\n    case AUTH_ACTIONS.REGISTER_FAILURE:\n    case AUTH_ACTIONS.LOAD_USER_FAILURE:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        user: null,\n        token: null,\n        loading: false,\n        error: action.payload\n      };\n    case AUTH_ACTIONS.LOGOUT:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        user: null,\n        token: null,\n        loading: false,\n        error: null\n      };\n    case AUTH_ACTIONS.CLEAR_ERROR:\n      return {\n        ...state,\n        error: null\n      };\n    default:\n      return state;\n  }\n};\n\n// Create context\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Auth provider component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Token is automatically handled by axios interceptor\n\n  // Load user on app start\n  useEffect(() => {\n    const initializeAuth = async () => {\n      const token = localStorage.getItem('token');\n      console.log('🔐 Initializing auth, token exists:', !!token);\n      if (token) {\n        try {\n          console.log('🔄 Loading user with existing token...');\n          await loadUser();\n          console.log('✅ User loaded successfully');\n        } catch (error) {\n          var _error$response;\n          console.error('❌ Failed to load user:', error);\n          // Only remove token if it's definitely invalid\n          if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n            console.log('🚫 Token expired, removing from localStorage');\n            localStorage.removeItem('token');\n            dispatch({\n              type: AUTH_ACTIONS.LOAD_USER_FAILURE,\n              payload: 'Token expired'\n            });\n          } else {\n            dispatch({\n              type: AUTH_ACTIONS.LOAD_USER_FAILURE,\n              payload: 'Failed to load user'\n            });\n          }\n        }\n      } else {\n        console.log('ℹ️ No token found, user not authenticated');\n        dispatch({\n          type: AUTH_ACTIONS.LOAD_USER_FAILURE,\n          payload: 'No token found'\n        });\n      }\n    };\n    initializeAuth();\n  }, []); // Remove dependency on state.token to prevent infinite loops\n\n  // Load user\n  const loadUser = async () => {\n    dispatch({\n      type: AUTH_ACTIONS.LOAD_USER_START\n    });\n    try {\n      const response = await axios.get(config.api.endpoints.auth.me);\n      if (response.data.success && response.data.data.user) {\n        dispatch({\n          type: AUTH_ACTIONS.LOAD_USER_SUCCESS,\n          payload: response.data.data\n        });\n      } else {\n        throw new Error('Invalid response format from server');\n      }\n    } catch (error) {\n      var _error$response2, _error$response3;\n      console.error('Load user error:', error);\n\n      // Handle different types of errors\n      if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 401) {\n        // Token is invalid, remove it\n        localStorage.removeItem('token');\n        dispatch({\n          type: AUTH_ACTIONS.LOAD_USER_FAILURE,\n          payload: 'Token expired, please login again'\n        });\n      } else if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) >= 500) {\n        // Server error, don't remove token\n        dispatch({\n          type: AUTH_ACTIONS.LOAD_USER_FAILURE,\n          payload: 'Server error, please try again later'\n        });\n      } else {\n        var _error$response4, _error$response4$data;\n        // Other errors\n        dispatch({\n          type: AUTH_ACTIONS.LOAD_USER_FAILURE,\n          payload: ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Failed to load user'\n        });\n      }\n\n      // Re-throw the error so the calling function can handle it\n      throw error;\n    }\n  };\n\n  // Login\n  const login = async (email, password) => {\n    dispatch({\n      type: AUTH_ACTIONS.LOGIN_START\n    });\n    try {\n      var _response$data$data;\n      const response = await axios.post(config.api.endpoints.auth.login, {\n        email,\n        password\n      });\n\n      // Validate response format\n      if (response.data.success && response.data.token && (_response$data$data = response.data.data) !== null && _response$data$data !== void 0 && _response$data$data.user) {\n        // Store token first\n        localStorage.setItem('token', response.data.token);\n\n        // Update state\n        dispatch({\n          type: AUTH_ACTIONS.LOGIN_SUCCESS,\n          payload: {\n            token: response.data.token,\n            user: response.data.data.user\n          }\n        });\n        return {\n          success: true\n        };\n      } else {\n        throw new Error('Invalid response format from server');\n      }\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      console.error('Login error:', error);\n      const errorMessage = ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || 'Login failed';\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_FAILURE,\n        payload: errorMessage\n      });\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n\n  // Register\n  const register = async userData => {\n    dispatch({\n      type: AUTH_ACTIONS.REGISTER_START\n    });\n    try {\n      console.log('🚀 Attempting registration with data:', userData);\n      console.log('🔗 Using endpoint:', config.api.endpoints.auth.register);\n      console.log('🌐 Full URL will be:', `${config.api.baseURL}${config.api.endpoints.auth.register}`);\n      const response = await axios.post(config.api.endpoints.auth.register, userData);\n      dispatch({\n        type: AUTH_ACTIONS.REGISTER_SUCCESS,\n        payload: {\n          token: response.data.token,\n          user: response.data.data.user\n        }\n      });\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response6, _error$response7, _error$response8, _error$response9, _error$response0, _error$response0$data;\n      console.error('❌ Registration error:', error);\n      console.error('❌ Error response:', (_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data);\n      console.error('❌ Error status:', (_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.status);\n      let errorMessage = 'Registration failed';\n      if (((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : _error$response8.status) === 404) {\n        errorMessage = 'Backend service not available. Please try again later.';\n      } else if (((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : _error$response9.status) >= 500) {\n        errorMessage = 'Server error. Please try again later.';\n      } else if ((_error$response0 = error.response) !== null && _error$response0 !== void 0 && (_error$response0$data = _error$response0.data) !== null && _error$response0$data !== void 0 && _error$response0$data.message) {\n        errorMessage = error.response.data.message;\n      } else if (error.message) {\n        errorMessage = error.message;\n      }\n      dispatch({\n        type: AUTH_ACTIONS.REGISTER_FAILURE,\n        payload: errorMessage\n      });\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n\n  // Logout\n  const logout = async () => {\n    try {\n      await axios.post(config.api.endpoints.auth.logout);\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      dispatch({\n        type: AUTH_ACTIONS.LOGOUT\n      });\n    }\n  };\n\n  // Update profile\n  const updateProfile = async profileData => {\n    try {\n      const response = await axios.put(config.api.endpoints.auth.updateProfile, profileData);\n      dispatch({\n        type: AUTH_ACTIONS.UPDATE_PROFILE_SUCCESS,\n        payload: response.data.data\n      });\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response1, _error$response1$data;\n      const errorMessage = ((_error$response1 = error.response) === null || _error$response1 === void 0 ? void 0 : (_error$response1$data = _error$response1.data) === null || _error$response1$data === void 0 ? void 0 : _error$response1$data.message) || 'Profile update failed';\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n\n  // Update password\n  const updatePassword = async passwordData => {\n    try {\n      const response = await axios.put(config.api.endpoints.auth.updatePassword, passwordData);\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\n        payload: {\n          token: response.data.token,\n          user: response.data.data.user\n        }\n      });\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response10, _error$response10$dat;\n      const errorMessage = ((_error$response10 = error.response) === null || _error$response10 === void 0 ? void 0 : (_error$response10$dat = _error$response10.data) === null || _error$response10$dat === void 0 ? void 0 : _error$response10$dat.message) || 'Password update failed';\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n\n  // Forgot password\n  const forgotPassword = async email => {\n    try {\n      await axios.post(config.api.endpoints.auth.forgotPassword, {\n        email\n      });\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response11, _error$response11$dat;\n      const errorMessage = ((_error$response11 = error.response) === null || _error$response11 === void 0 ? void 0 : (_error$response11$dat = _error$response11.data) === null || _error$response11$dat === void 0 ? void 0 : _error$response11$dat.message) || 'Failed to send reset email';\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n\n  // Reset password\n  const resetPassword = async (token, password) => {\n    try {\n      const response = await axios.put(`/api/auth/reset-password/${token}`, {\n        password\n      });\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\n        payload: {\n          token: response.data.token,\n          user: response.data.data.user\n        }\n      });\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response12, _error$response12$dat;\n      const errorMessage = ((_error$response12 = error.response) === null || _error$response12 === void 0 ? void 0 : (_error$response12$dat = _error$response12.data) === null || _error$response12$dat === void 0 ? void 0 : _error$response12$dat.message) || 'Password reset failed';\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n\n  // Clear error\n  const clearError = () => {\n    dispatch({\n      type: AUTH_ACTIONS.CLEAR_ERROR\n    });\n  };\n\n  // Validate token\n  const validateToken = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) return false;\n    try {\n      const response = await axios.get('/api/auth/me');\n      return response.data.success && response.data.data.user;\n    } catch (error) {\n      var _error$response13;\n      if (((_error$response13 = error.response) === null || _error$response13 === void 0 ? void 0 : _error$response13.status) === 401) {\n        localStorage.removeItem('token');\n        return false;\n      }\n      return false;\n    }\n  };\n\n  // Check if user is authenticated\n  const isAuthenticated = () => {\n    return !!(state.token && state.user);\n  };\n\n  // Get user role\n  const getUserRole = () => {\n    var _state$user;\n    return (_state$user = state.user) === null || _state$user === void 0 ? void 0 : _state$user.role;\n  };\n\n  // Check if user has specific role\n  const hasRole = role => {\n    var _state$user2;\n    return ((_state$user2 = state.user) === null || _state$user2 === void 0 ? void 0 : _state$user2.role) === role;\n  };\n\n  // Check if user has specific permission\n  const hasPermission = permission => {\n    var _state$user3, _state$user3$permissi;\n    return (_state$user3 = state.user) === null || _state$user3 === void 0 ? void 0 : (_state$user3$permissi = _state$user3.permissions) === null || _state$user3$permissi === void 0 ? void 0 : _state$user3$permissi.includes(permission);\n  };\n  const value = {\n    ...state,\n    login,\n    register,\n    logout,\n    updateProfile,\n    updatePassword,\n    forgotPassword,\n    resetPassword,\n    clearError,\n    hasPermission,\n    hasRole,\n    loadUser,\n    validateToken,\n    isAuthenticated,\n    getUserRole\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 394,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use auth context\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","axios","config","jsxDEV","_jsxDEV","initialState","user","token","localStorage","getItem","loading","error","AUTH_ACTIONS","LOGIN_START","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","REGISTER_START","REGISTER_SUCCESS","REGISTER_FAILURE","LOAD_USER_START","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","UPDATE_PROFILE_SUCCESS","CLEAR_ERROR","authReducer","state","action","type","setItem","payload","removeItem","AuthContext","AuthProvider","children","_s","dispatch","initializeAuth","console","log","loadUser","_error$response","response","status","get","api","endpoints","auth","me","data","success","Error","_error$response2","_error$response3","_error$response4","_error$response4$data","message","login","email","password","_response$data$data","post","_error$response5","_error$response5$data","errorMessage","register","userData","baseURL","_error$response6","_error$response7","_error$response8","_error$response9","_error$response0","_error$response0$data","logout","updateProfile","profileData","put","_error$response1","_error$response1$data","updatePassword","passwordData","_error$response10","_error$response10$dat","forgotPassword","_error$response11","_error$response11$dat","resetPassword","_error$response12","_error$response12$dat","clearError","validateToken","_error$response13","isAuthenticated","getUserRole","_state$user","role","hasRole","_state$user2","hasPermission","permission","_state$user3","_state$user3$permissi","permissions","includes","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["C:/Users/Baap/Desktop/campus-event-management/campus-event-frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\nimport axios from '../utils/axios';\r\nimport config from '../config/config';\r\n\r\n// Initial state\r\nconst initialState = {\r\n  user: null,\r\n  token: localStorage.getItem('token'),\r\n  loading: true,\r\n  error: null\r\n};\r\n\r\n// Action types\r\nconst AUTH_ACTIONS = {\r\n  LOGIN_START: 'LOGIN_START',\r\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\r\n  LOGIN_FAILURE: 'LOGIN_FAILURE',\r\n  LOGOUT: 'LOGOUT',\r\n  REGISTER_START: 'REGISTER_START',\r\n  REGISTER_SUCCESS: 'REGISTER_SUCCESS',\r\n  REGISTER_FAILURE: 'REGISTER_FAILURE',\r\n  LOAD_USER_START: 'LOAD_USER_START',\r\n  LOAD_USER_SUCCESS: 'LOAD_USER_SUCCESS',\r\n  LOAD_USER_FAILURE: 'LOAD_USER_FAILURE',\r\n  UPDATE_PROFILE_SUCCESS: 'UPDATE_PROFILE_SUCCESS',\r\n  CLEAR_ERROR: 'CLEAR_ERROR'\r\n};\r\n\r\n// Reducer\r\nconst authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case AUTH_ACTIONS.LOGIN_START:\r\n    case AUTH_ACTIONS.REGISTER_START:\r\n    case AUTH_ACTIONS.LOAD_USER_START:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null\r\n      };\r\n\r\n    case AUTH_ACTIONS.LOGIN_SUCCESS:\r\n    case AUTH_ACTIONS.REGISTER_SUCCESS:\r\n      localStorage.setItem('token', action.payload.token);\r\n      return {\r\n        ...state,\r\n        user: action.payload.user,\r\n        token: action.payload.token,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case AUTH_ACTIONS.LOAD_USER_SUCCESS:\r\n    case AUTH_ACTIONS.UPDATE_PROFILE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user: action.payload.user,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case AUTH_ACTIONS.LOGIN_FAILURE:\r\n    case AUTH_ACTIONS.REGISTER_FAILURE:\r\n    case AUTH_ACTIONS.LOAD_USER_FAILURE:\r\n      localStorage.removeItem('token');\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        token: null,\r\n        loading: false,\r\n        error: action.payload\r\n      };\r\n\r\n    case AUTH_ACTIONS.LOGOUT:\r\n      localStorage.removeItem('token');\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        token: null,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case AUTH_ACTIONS.CLEAR_ERROR:\r\n      return {\r\n        ...state,\r\n        error: null\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Create context\r\nconst AuthContext = createContext();\r\n\r\n// Auth provider component\r\nexport const AuthProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  // Token is automatically handled by axios interceptor\r\n\r\n  // Load user on app start\r\n  useEffect(() => {\r\n    const initializeAuth = async () => {\r\n      const token = localStorage.getItem('token');\r\n      console.log('🔐 Initializing auth, token exists:', !!token);\r\n      \r\n      if (token) {\r\n        try {\r\n          console.log('🔄 Loading user with existing token...');\r\n          await loadUser();\r\n          console.log('✅ User loaded successfully');\r\n        } catch (error) {\r\n          console.error('❌ Failed to load user:', error);\r\n          // Only remove token if it's definitely invalid\r\n          if (error.response?.status === 401) {\r\n            console.log('🚫 Token expired, removing from localStorage');\r\n            localStorage.removeItem('token');\r\n            dispatch({ type: AUTH_ACTIONS.LOAD_USER_FAILURE, payload: 'Token expired' });\r\n          } else {\r\n            dispatch({ type: AUTH_ACTIONS.LOAD_USER_FAILURE, payload: 'Failed to load user' });\r\n          }\r\n        }\r\n      } else {\r\n        console.log('ℹ️ No token found, user not authenticated');\r\n        dispatch({ type: AUTH_ACTIONS.LOAD_USER_FAILURE, payload: 'No token found' });\r\n      }\r\n    };\r\n\r\n    initializeAuth();\r\n  }, []); // Remove dependency on state.token to prevent infinite loops\r\n\r\n  // Load user\r\n  const loadUser = async () => {\r\n    dispatch({ type: AUTH_ACTIONS.LOAD_USER_START });\r\n    \r\n    try {\r\n      const response = await axios.get(config.api.endpoints.auth.me);\r\n      \r\n      if (response.data.success && response.data.data.user) {\r\n        dispatch({\r\n          type: AUTH_ACTIONS.LOAD_USER_SUCCESS,\r\n          payload: response.data.data\r\n        });\r\n      } else {\r\n        throw new Error('Invalid response format from server');\r\n      }\r\n    } catch (error) {\r\n      console.error('Load user error:', error);\r\n      \r\n      // Handle different types of errors\r\n      if (error.response?.status === 401) {\r\n        // Token is invalid, remove it\r\n        localStorage.removeItem('token');\r\n        dispatch({\r\n          type: AUTH_ACTIONS.LOAD_USER_FAILURE,\r\n          payload: 'Token expired, please login again'\r\n        });\r\n      } else if (error.response?.status >= 500) {\r\n        // Server error, don't remove token\r\n        dispatch({\r\n          type: AUTH_ACTIONS.LOAD_USER_FAILURE,\r\n          payload: 'Server error, please try again later'\r\n        });\r\n      } else {\r\n        // Other errors\r\n        dispatch({\r\n          type: AUTH_ACTIONS.LOAD_USER_FAILURE,\r\n          payload: error.response?.data?.message || 'Failed to load user'\r\n        });\r\n      }\r\n      \r\n      // Re-throw the error so the calling function can handle it\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Login\r\n  const login = async (email, password) => {\r\n    dispatch({ type: AUTH_ACTIONS.LOGIN_START });\r\n\r\n    try {\r\n      const response = await axios.post(config.api.endpoints.auth.login, { email, password });\r\n      \r\n      // Validate response format\r\n      if (response.data.success && response.data.token && response.data.data?.user) {\r\n        // Store token first\r\n        localStorage.setItem('token', response.data.token);\r\n        \r\n        // Update state\r\n        dispatch({\r\n          type: AUTH_ACTIONS.LOGIN_SUCCESS,\r\n          payload: {\r\n            token: response.data.token,\r\n            user: response.data.data.user\r\n          }\r\n        });\r\n        \r\n        return { success: true };\r\n      } else {\r\n        throw new Error('Invalid response format from server');\r\n      }\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      \r\n      const errorMessage = error.response?.data?.message || 'Login failed';\r\n      dispatch({\r\n        type: AUTH_ACTIONS.LOGIN_FAILURE,\r\n        payload: errorMessage\r\n      });\r\n      \r\n      return { success: false, error: errorMessage };\r\n    }\r\n  };\r\n\r\n  // Register\r\n  const register = async (userData) => {\r\n    dispatch({ type: AUTH_ACTIONS.REGISTER_START });\r\n\r\n    try {\r\n      console.log('🚀 Attempting registration with data:', userData);\r\n      console.log('🔗 Using endpoint:', config.api.endpoints.auth.register);\r\n      console.log('🌐 Full URL will be:', `${config.api.baseURL}${config.api.endpoints.auth.register}`);\r\n      \r\n      const response = await axios.post(config.api.endpoints.auth.register, userData);\r\n      dispatch({\r\n        type: AUTH_ACTIONS.REGISTER_SUCCESS,\r\n        payload: {\r\n          token: response.data.token,\r\n          user: response.data.data.user\r\n        }\r\n      });\r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('❌ Registration error:', error);\r\n      console.error('❌ Error response:', error.response?.data);\r\n      console.error('❌ Error status:', error.response?.status);\r\n      \r\n      let errorMessage = 'Registration failed';\r\n      \r\n      if (error.response?.status === 404) {\r\n        errorMessage = 'Backend service not available. Please try again later.';\r\n      } else if (error.response?.status >= 500) {\r\n        errorMessage = 'Server error. Please try again later.';\r\n      } else if (error.response?.data?.message) {\r\n        errorMessage = error.response.data.message;\r\n      } else if (error.message) {\r\n        errorMessage = error.message;\r\n      }\r\n      \r\n      dispatch({\r\n        type: AUTH_ACTIONS.REGISTER_FAILURE,\r\n        payload: errorMessage\r\n      });\r\n      return { success: false, error: errorMessage };\r\n    }\r\n  };\r\n\r\n  // Logout\r\n  const logout = async () => {\r\n    try {\r\n      await axios.post(config.api.endpoints.auth.logout);\r\n    } catch (error) {\r\n      console.error('Logout error:', error);\r\n    } finally {\r\n      dispatch({ type: AUTH_ACTIONS.LOGOUT });\r\n    }\r\n  };\r\n\r\n  // Update profile\r\n  const updateProfile = async (profileData) => {\r\n    try {\r\n      const response = await axios.put(config.api.endpoints.auth.updateProfile, profileData);\r\n      dispatch({\r\n        type: AUTH_ACTIONS.UPDATE_PROFILE_SUCCESS,\r\n        payload: response.data.data\r\n      });\r\n      return { success: true };\r\n    } catch (error) {\r\n      const errorMessage = error.response?.data?.message || 'Profile update failed';\r\n      return { success: false, error: errorMessage };\r\n    }\r\n  };\r\n\r\n  // Update password\r\n  const updatePassword = async (passwordData) => {\r\n    try {\r\n      const response = await axios.put(config.api.endpoints.auth.updatePassword, passwordData);\r\n      dispatch({\r\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\r\n        payload: {\r\n          token: response.data.token,\r\n          user: response.data.data.user\r\n        }\r\n      });\r\n      return { success: true };\r\n    } catch (error) {\r\n      const errorMessage = error.response?.data?.message || 'Password update failed';\r\n      return { success: false, error: errorMessage };\r\n    }\r\n  };\r\n\r\n  // Forgot password\r\n  const forgotPassword = async (email) => {\r\n    try {\r\n      await axios.post(config.api.endpoints.auth.forgotPassword, { email });\r\n      return { success: true };\r\n    } catch (error) {\r\n      const errorMessage = error.response?.data?.message || 'Failed to send reset email';\r\n      return { success: false, error: errorMessage };\r\n    }\r\n  };\r\n\r\n  // Reset password\r\n  const resetPassword = async (token, password) => {\r\n    try {\r\n      const response = await axios.put(`/api/auth/reset-password/${token}`, { password });\r\n      dispatch({\r\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\r\n        payload: {\r\n          token: response.data.token,\r\n          user: response.data.data.user\r\n        }\r\n      });\r\n      return { success: true };\r\n    } catch (error) {\r\n      const errorMessage = error.response?.data?.message || 'Password reset failed';\r\n      return { success: false, error: errorMessage };\r\n    }\r\n  };\r\n\r\n  // Clear error\r\n  const clearError = () => {\r\n    dispatch({ type: AUTH_ACTIONS.CLEAR_ERROR });\r\n  };\r\n\r\n  // Validate token\r\n  const validateToken = async () => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) return false;\r\n    \r\n    try {\r\n      const response = await axios.get('/api/auth/me');\r\n      return response.data.success && response.data.data.user;\r\n    } catch (error) {\r\n      if (error.response?.status === 401) {\r\n        localStorage.removeItem('token');\r\n        return false;\r\n      }\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Check if user is authenticated\r\n  const isAuthenticated = () => {\r\n    return !!(state.token && state.user);\r\n  };\r\n\r\n  // Get user role\r\n  const getUserRole = () => {\r\n    return state.user?.role;\r\n  };\r\n\r\n  // Check if user has specific role\r\n  const hasRole = (role) => {\r\n    return state.user?.role === role;\r\n  };\r\n\r\n  // Check if user has specific permission\r\n  const hasPermission = (permission) => {\r\n    return state.user?.permissions?.includes(permission);\r\n  };\r\n\r\n  const value = {\r\n    ...state,\r\n    login,\r\n    register,\r\n    logout,\r\n    updateProfile,\r\n    updatePassword,\r\n    forgotPassword,\r\n    resetPassword,\r\n    clearError,\r\n    hasPermission,\r\n    hasRole,\r\n    loadUser,\r\n    validateToken,\r\n    isAuthenticated,\r\n    getUserRole\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use auth context\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport default AuthContext;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}