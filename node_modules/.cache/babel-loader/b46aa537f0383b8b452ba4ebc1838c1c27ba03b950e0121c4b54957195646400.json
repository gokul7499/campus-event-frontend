{"ast":null,"code":"import _objectSpread from\"C:/Users/Baap/Desktop/campus-event-management/campus-event-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useCallback}from'react';import{Container,Row,Col,Card,Button,Badge,Form,ListGroup,Spinner,Modal,Dropdown}from'react-bootstrap';import{toast}from'react-toastify';import axios from'../../utils/axios';import LoadingSpinner from'../../components/common/LoadingSpinner';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const NotificationsPage=()=>{const[notifications,setNotifications]=useState([]);const[loading,setLoading]=useState(true);const[unreadCount,setUnreadCount]=useState(0);const[filter,setFilter]=useState('all');// all, unread, read\nconst[typeFilter,setTypeFilter]=useState('all');const[selectedNotification,setSelectedNotification]=useState(null);const[showModal,setShowModal]=useState(false);const[markingAsRead,setMarkingAsRead]=useState(false);const fetchNotifications=useCallback(async()=>{try{var _unreadResponse$data$;setLoading(true);const params=new URLSearchParams();if(filter==='unread')params.append('isRead','false');if(filter==='read')params.append('isRead','true');if(typeFilter!=='all')params.append('type',typeFilter);const response=await axios.get(\"/api/notifications?\".concat(params));setNotifications(response.data.data||[]);// Get unread count\nconst unreadResponse=await axios.get('/api/notifications?isRead=false&limit=1');setUnreadCount(((_unreadResponse$data$=unreadResponse.data.pagination)===null||_unreadResponse$data$===void 0?void 0:_unreadResponse$data$.totalItems)||0);}catch(error){console.error('Error fetching notifications:',error);toast.error('Failed to load notifications');}finally{setLoading(false);}},[filter,typeFilter]);useEffect(()=>{fetchNotifications();},[fetchNotifications]);const handleMarkAsRead=async notificationId=>{try{await axios.put(\"/api/notifications/\".concat(notificationId,\"/read\"));// Update local state\nsetNotifications(prev=>prev.map(notif=>notif._id===notificationId?_objectSpread(_objectSpread({},notif),{},{isRead:true,readAt:new Date()}):notif));setUnreadCount(prev=>Math.max(0,prev-1));toast.success('Notification marked as read');}catch(error){console.error('Error marking notification as read:',error);toast.error('Failed to mark notification as read');}};const handleMarkAllAsRead=async()=>{try{setMarkingAsRead(true);await axios.put('/api/notifications/read-all');// Update local state\nsetNotifications(prev=>prev.map(notif=>_objectSpread(_objectSpread({},notif),{},{isRead:true,readAt:new Date()})));setUnreadCount(0);toast.success('All notifications marked as read');}catch(error){console.error('Error marking all notifications as read:',error);toast.error('Failed to mark all notifications as read');}finally{setMarkingAsRead(false);}};const handleDeleteNotification=async notificationId=>{try{await axios.delete(\"/api/notifications/\".concat(notificationId));// Update local state\nconst deletedNotification=notifications.find(n=>n._id===notificationId);setNotifications(prev=>prev.filter(n=>n._id!==notificationId));if(deletedNotification&&!deletedNotification.isRead){setUnreadCount(prev=>Math.max(0,prev-1));}toast.success('Notification deleted');}catch(error){console.error('Error deleting notification:',error);toast.error('Failed to delete notification');}};const handleNotificationClick=notification=>{setSelectedNotification(notification);setShowModal(true);// Mark as read if unread\nif(!notification.isRead){handleMarkAsRead(notification._id);}};const getNotificationIcon=type=>{const iconMap={event_registration:'bi-calendar-check',event_reminder:'bi-clock',event_update:'bi-pencil-square',event_cancellation:'bi-x-circle',event_approval:'bi-check-circle',event_rejection:'bi-x-circle',system_announcement:'bi-megaphone',password_reset:'bi-key',account_verification:'bi-shield-check',general:'bi-info-circle'};return iconMap[type]||'bi-bell';};const getNotificationColor=type=>{const colorMap={event_registration:'success',event_reminder:'warning',event_update:'info',event_cancellation:'danger',event_approval:'success',event_rejection:'danger',system_announcement:'primary',password_reset:'warning',account_verification:'info',general:'secondary'};return colorMap[type]||'secondary';};const formatNotificationType=type=>{return type.split('_').map(word=>word.charAt(0).toUpperCase()+word.slice(1)).join(' ');};if(loading&&notifications.length===0){return/*#__PURE__*/_jsx(LoadingSpinner,{});}return/*#__PURE__*/_jsxs(Container,{className:\"py-4\",children:[/*#__PURE__*/_jsx(Row,{className:\"mb-4\",children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between align-items-center\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"mb-1\",children:\"Notifications\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-muted mb-0\",children:unreadCount>0?\"\".concat(unreadCount,\" unread notifications\"):'All caught up!'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex gap-2\",children:[/*#__PURE__*/_jsx(Button,{variant:\"outline-primary\",onClick:fetchNotifications,disabled:loading,children:loading?/*#__PURE__*/_jsx(Spinner,{size:\"sm\"}):/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-arrow-clockwise\"})}),unreadCount>0&&/*#__PURE__*/_jsxs(Button,{variant:\"primary\",onClick:handleMarkAllAsRead,disabled:markingAsRead,children:[markingAsRead?/*#__PURE__*/_jsx(Spinner,{size:\"sm\",className:\"me-2\"}):null,\"Mark All Read\"]})]})]})})}),/*#__PURE__*/_jsx(Row,{className:\"mb-4\",children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(Card,{className:\"border-0 shadow-sm\",children:/*#__PURE__*/_jsx(Card.Body,{children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsxs(Col,{md:6,className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Filter by Status\"}),/*#__PURE__*/_jsxs(Form.Select,{value:filter,onChange:e=>setFilter(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"all\",children:\"All Notifications\"}),/*#__PURE__*/_jsx(\"option\",{value:\"unread\",children:\"Unread Only\"}),/*#__PURE__*/_jsx(\"option\",{value:\"read\",children:\"Read Only\"})]})]}),/*#__PURE__*/_jsxs(Col,{md:6,className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Filter by Type\"}),/*#__PURE__*/_jsxs(Form.Select,{value:typeFilter,onChange:e=>setTypeFilter(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"all\",children:\"All Types\"}),/*#__PURE__*/_jsx(\"option\",{value:\"event_registration\",children:\"Event Registration\"}),/*#__PURE__*/_jsx(\"option\",{value:\"event_reminder\",children:\"Event Reminder\"}),/*#__PURE__*/_jsx(\"option\",{value:\"event_update\",children:\"Event Update\"}),/*#__PURE__*/_jsx(\"option\",{value:\"event_cancellation\",children:\"Event Cancellation\"}),/*#__PURE__*/_jsx(\"option\",{value:\"system_announcement\",children:\"System Announcement\"}),/*#__PURE__*/_jsx(\"option\",{value:\"general\",children:\"General\"})]})]})]})})})})}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsxs(Card,{className:\"border-0 shadow-sm\",children:[/*#__PURE__*/_jsx(Card.Header,{className:\"bg-white border-0 py-3\",children:/*#__PURE__*/_jsx(\"h5\",{className:\"mb-0\",children:\"Your Notifications\"})}),/*#__PURE__*/_jsx(Card.Body,{className:\"p-0\",children:loading?/*#__PURE__*/_jsx(\"div\",{className:\"text-center py-4\",children:/*#__PURE__*/_jsx(Spinner,{animation:\"border\"})}):notifications.length>0?/*#__PURE__*/_jsx(ListGroup,{variant:\"flush\",children:notifications.map(notification=>/*#__PURE__*/_jsx(ListGroup.Item,{className:\"notification-item \".concat(!notification.isRead?'notification-unread':''),style:{cursor:'pointer'},onClick:()=>handleNotificationClick(notification),children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex align-items-start\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex-shrink-0 me-3\",children:/*#__PURE__*/_jsx(\"div\",{className:\"bg-\".concat(getNotificationColor(notification.type),\" bg-opacity-10 rounded-circle d-flex align-items-center justify-content-center\"),style:{width:'40px',height:'40px'},children:/*#__PURE__*/_jsx(\"i\",{className:\"\".concat(getNotificationIcon(notification.type),\" text-\").concat(getNotificationColor(notification.type))})})}),/*#__PURE__*/_jsx(\"div\",{className:\"flex-grow-1\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between align-items-start\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h6\",{className:\"mb-1\",children:notification.title}),/*#__PURE__*/_jsx(\"p\",{className:\"mb-1 text-muted\",children:notification.message}),/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex align-items-center gap-3\",children:[/*#__PURE__*/_jsxs(\"small\",{className:\"text-muted\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-clock me-1\"}),new Date(notification.createdAt).toLocaleString()]}),/*#__PURE__*/_jsx(Badge,{bg:getNotificationColor(notification.type),className:\"small\",children:formatNotificationType(notification.type)}),!notification.isRead&&/*#__PURE__*/_jsx(Badge,{bg:\"primary\",className:\"small\",children:\"New\"})]})]}),/*#__PURE__*/_jsxs(Dropdown,{onClick:e=>e.stopPropagation(),children:[/*#__PURE__*/_jsx(Dropdown.Toggle,{variant:\"link\",size:\"sm\",className:\"text-muted\",children:/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-three-dots-vertical\"})}),/*#__PURE__*/_jsxs(Dropdown.Menu,{children:[!notification.isRead&&/*#__PURE__*/_jsxs(Dropdown.Item,{onClick:()=>handleMarkAsRead(notification._id),children:[/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-check me-2\"}),\"Mark as Read\"]}),/*#__PURE__*/_jsxs(Dropdown.Item,{className:\"text-danger\",onClick:()=>handleDeleteNotification(notification._id),children:[/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-trash me-2\"}),\"Delete\"]})]})]})]})})]})},notification._id))}):/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-5\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-bell-slash text-muted\",style:{fontSize:'3rem'}}),/*#__PURE__*/_jsx(\"h4\",{className:\"mt-3\",children:\"No Notifications\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-muted\",children:filter==='unread'?'No unread notifications':'You have no notifications yet.'})]})})]})})}),/*#__PURE__*/_jsxs(Modal,{show:showModal,onHide:()=>setShowModal(false),size:\"lg\",children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,children:/*#__PURE__*/_jsxs(Modal.Title,{children:[/*#__PURE__*/_jsx(\"i\",{className:\"\".concat(getNotificationIcon(selectedNotification===null||selectedNotification===void 0?void 0:selectedNotification.type),\" me-2\")}),selectedNotification===null||selectedNotification===void 0?void 0:selectedNotification.title]})}),/*#__PURE__*/_jsx(Modal.Body,{children:selectedNotification&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Badge,{bg:getNotificationColor(selectedNotification.type),children:formatNotificationType(selectedNotification.type)}),!selectedNotification.isRead&&/*#__PURE__*/_jsx(Badge,{bg:\"primary\",className:\"ms-2\",children:\"New\"})]}),/*#__PURE__*/_jsx(\"p\",{children:selectedNotification.message}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsxs(\"small\",{className:\"text-muted\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Received:\"}),\" \",new Date(selectedNotification.createdAt).toLocaleString(),selectedNotification.readAt&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"strong\",{children:\"Read:\"}),\" \",new Date(selectedNotification.readAt).toLocaleString()]})]})]})}),/*#__PURE__*/_jsxs(Modal.Footer,{children:[/*#__PURE__*/_jsx(Button,{variant:\"secondary\",onClick:()=>setShowModal(false),children:\"Close\"}),selectedNotification&&!selectedNotification.isRead&&/*#__PURE__*/_jsx(Button,{variant:\"primary\",onClick:()=>{handleMarkAsRead(selectedNotification._id);setShowModal(false);},children:\"Mark as Read\"})]})]})]});};export default NotificationsPage;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}