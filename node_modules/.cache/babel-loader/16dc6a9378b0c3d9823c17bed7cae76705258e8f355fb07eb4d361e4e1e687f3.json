{"ast":null,"code":"import axios from'axios';import config from'../config/config';// Create axios instance with base configuration\nconst axiosInstance=axios.create({baseURL:config.api.baseURL,timeout:config.api.timeout,headers:{'Content-Type':'application/json'}});// Request interceptor to add auth token\naxiosInstance.interceptors.request.use(config=>{var _config$method;// Debug logging\nconsole.log('üöÄ API Request:',{method:(_config$method=config.method)===null||_config$method===void 0?void 0:_config$method.toUpperCase(),url:config.url,baseURL:config.baseURL,fullURL:\"\".concat(config.baseURL).concat(config.url)});const token=localStorage.getItem('token');if(token){config.headers.Authorization=\"Bearer \".concat(token);console.log('üîë Token added to request');}return config;},error=>{console.error('‚ùå Request interceptor error:',error);return Promise.reject(error);});// Response interceptor to handle errors\naxiosInstance.interceptors.response.use(response=>{console.log('‚úÖ API Response:',{status:response.status,url:response.config.url,data:response.data});return response;},error=>{var _error$response,_error$response2,_error$config,_error$config2,_error$config3,_error$config3$method,_error$response3,_error$response4,_error$response5,_error$response6;console.error('‚ùå API Error Details:',{status:(_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status,statusText:(_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.statusText,message:error.message,url:(_error$config=error.config)===null||_error$config===void 0?void 0:_error$config.url,baseURL:(_error$config2=error.config)===null||_error$config2===void 0?void 0:_error$config2.baseURL,fullURL:error.config?\"\".concat(error.config.baseURL).concat(error.config.url):'Unknown',method:(_error$config3=error.config)===null||_error$config3===void 0?void 0:(_error$config3$method=_error$config3.method)===null||_error$config3$method===void 0?void 0:_error$config3$method.toUpperCase(),data:(_error$response3=error.response)===null||_error$response3===void 0?void 0:_error$response3.data,headers:(_error$response4=error.response)===null||_error$response4===void 0?void 0:_error$response4.headers});// Handle specific error types\nif(((_error$response5=error.response)===null||_error$response5===void 0?void 0:_error$response5.status)===404){console.error('üö´ 404 Error: API endpoint not found. Check if backend is running and endpoints are correct.');console.error('üîç Attempted URL:',error.config?\"\".concat(error.config.baseURL).concat(error.config.url):'Unknown');}else if(error.code==='NETWORK_ERROR'||error.message==='Network Error'){console.error('üåê Network Error: Unable to connect to backend server. Please check your internet connection and try again.');}else if(error.code==='ECONNREFUSED'){console.error('üîå Connection Refused: Backend server is not running or not accessible.');}// Only handle 401 errors for non-auth endpoints  \nif(((_error$response6=error.response)===null||_error$response6===void 0?void 0:_error$response6.status)===401&&!error.config.url.includes('/auth/')){// Token expired or invalid for protected routes\nlocalStorage.removeItem('token');// Don't redirect immediately, let the component handle it\nconsole.warn('Token expired, please login again');}return Promise.reject(error);});export default axiosInstance;","map":{"version":3,"names":["axios","config","axiosInstance","create","baseURL","api","timeout","headers","interceptors","request","use","_config$method","console","log","method","toUpperCase","url","fullURL","concat","token","localStorage","getItem","Authorization","error","Promise","reject","response","status","data","_error$response","_error$response2","_error$config","_error$config2","_error$config3","_error$config3$method","_error$response3","_error$response4","_error$response5","_error$response6","statusText","message","code","includes","removeItem","warn"],"sources":["C:/Users/Baap/Desktop/campus-event-management/campus-event-frontend/src/utils/axios.js"],"sourcesContent":["import axios from 'axios';\r\nimport config from '../config/config';\r\n\r\n// Create axios instance with base configuration\r\nconst axiosInstance = axios.create({\r\n  baseURL: config.api.baseURL,\r\n  timeout: config.api.timeout,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor to add auth token\r\naxiosInstance.interceptors.request.use(\r\n  (config) => {\r\n    // Debug logging\r\n    console.log('üöÄ API Request:', {\r\n      method: config.method?.toUpperCase(),\r\n      url: config.url,\r\n      baseURL: config.baseURL,\r\n      fullURL: `${config.baseURL}${config.url}`\r\n    });\r\n\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n      console.log('üîë Token added to request');\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.error('‚ùå Request interceptor error:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor to handle errors\r\naxiosInstance.interceptors.response.use(\r\n  (response) => {\r\n    console.log('‚úÖ API Response:', {\r\n      status: response.status,\r\n      url: response.config.url,\r\n      data: response.data\r\n    });\r\n    return response;\r\n  },\r\n  (error) => {\r\n    console.error('‚ùå API Error Details:', {\r\n      status: error.response?.status,\r\n      statusText: error.response?.statusText,\r\n      message: error.message,\r\n      url: error.config?.url,\r\n      baseURL: error.config?.baseURL,\r\n      fullURL: error.config ? `${error.config.baseURL}${error.config.url}` : 'Unknown',\r\n      method: error.config?.method?.toUpperCase(),\r\n      data: error.response?.data,\r\n      headers: error.response?.headers\r\n    });\r\n\r\n    // Handle specific error types\r\n    if (error.response?.status === 404) {\r\n      console.error('üö´ 404 Error: API endpoint not found. Check if backend is running and endpoints are correct.');\r\n      console.error('üîç Attempted URL:', error.config ? `${error.config.baseURL}${error.config.url}` : 'Unknown');\r\n    } else if (error.code === 'NETWORK_ERROR' || error.message === 'Network Error') {\r\n      console.error('üåê Network Error: Unable to connect to backend server. Please check your internet connection and try again.');\r\n    } else if (error.code === 'ECONNREFUSED') {\r\n      console.error('üîå Connection Refused: Backend server is not running or not accessible.');\r\n    }\r\n\r\n    // Only handle 401 errors for non-auth endpoints  \r\n    if (error.response?.status === 401 && !error.config.url.includes('/auth/')) {\r\n      // Token expired or invalid for protected routes\r\n      localStorage.removeItem('token');\r\n      // Don't redirect immediately, let the component handle it\r\n      console.warn('Token expired, please login again');\r\n    }\r\n    \r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosInstance;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}