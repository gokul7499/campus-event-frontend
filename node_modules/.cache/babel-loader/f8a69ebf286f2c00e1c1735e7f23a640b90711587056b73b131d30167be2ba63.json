{"ast":null,"code":"\"use client\";\n\nimport _objectSpread from \"C:/Users/Baap/Desktop/campus-event-management/campus-event-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"C:/Users/Baap/Desktop/campus-event-management/campus-event-frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"bsPrefix\", \"className\", \"children\", \"aspectRatio\", \"style\"];\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction toPercent(num) {\n  if (num <= 0) return '100%';\n  if (num < 1) return \"\".concat(num * 100, \"%\");\n  return \"\".concat(num, \"%\");\n}\nconst Ratio = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      bsPrefix,\n      className,\n      children,\n      aspectRatio = '1x1',\n      style\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'ratio');\n  const isCustomRatio = typeof aspectRatio === 'number';\n  return /*#__PURE__*/_jsx(\"div\", _objectSpread(_objectSpread({\n    ref: ref\n  }, props), {}, {\n    style: _objectSpread(_objectSpread({}, style), isCustomRatio && {\n      '--bs-aspect-ratio': toPercent(aspectRatio)\n    }),\n    className: classNames(bsPrefix, className, !isCustomRatio && \"\".concat(bsPrefix, \"-\").concat(aspectRatio)),\n    children: React.Children.only(children)\n  }));\n});\nRatio.displayName = 'Ratio';\nexport default Ratio;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}