{"ast":null,"code":"import axios from 'axios';\nimport config from '../config/config';\n\n// Create axios instance with base configuration\nconst axiosInstance = axios.create({\n  baseURL: config.api.baseURL,\n  timeout: config.api.timeout,\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  },\n  // Add additional configuration for better error handling\n  validateStatus: function (status) {\n    return status >= 200 && status < 300; // default\n  }\n});\n\n// Retry mechanism for failed requests\nconst retryRequest = async (axiosConfig, retryCount = 0) => {\n  try {\n    return await axiosInstance(axiosConfig);\n  } catch (error) {\n    // Only retry on network errors or timeouts, not on 4xx/5xx responses\n    if (retryCount < config.api.retryAttempts && (error.code === 'ECONNABORTED' || error.code === 'NETWORK_ERROR' || !error.response)) {\n      console.log(`üîÑ Retrying request (attempt ${retryCount + 1}/${config.api.retryAttempts})`);\n      await new Promise(resolve => setTimeout(resolve, 1000 * (retryCount + 1))); // Exponential backoff\n      return retryRequest(axiosConfig, retryCount + 1);\n    }\n    throw error;\n  }\n};\n\n// Request interceptor to add auth token\naxiosInstance.interceptors.request.use(config => {\n  var _config$method;\n  // Debug logging\n  console.log('üöÄ API Request:', {\n    method: (_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase(),\n    url: config.url,\n    baseURL: config.baseURL,\n    fullURL: `${config.baseURL}${config.url}`\n  });\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n    console.log('üîë Token added to request');\n  }\n  return config;\n}, error => {\n  console.error('‚ùå Request interceptor error:', error);\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle errors\naxiosInstance.interceptors.response.use(response => {\n  console.log('‚úÖ API Response:', {\n    status: response.status,\n    url: response.config.url,\n    data: response.data\n  });\n  return response;\n}, error => {\n  var _error$response, _error$response2, _error$config, _error$config2, _error$config3, _error$config3$method, _error$response3, _error$response4, _error$response5, _error$response6;\n  console.error('‚ùå API Error Details:', {\n    status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n    statusText: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.statusText,\n    message: error.message,\n    url: (_error$config = error.config) === null || _error$config === void 0 ? void 0 : _error$config.url,\n    baseURL: (_error$config2 = error.config) === null || _error$config2 === void 0 ? void 0 : _error$config2.baseURL,\n    fullURL: error.config ? `${error.config.baseURL}${error.config.url}` : 'Unknown',\n    method: (_error$config3 = error.config) === null || _error$config3 === void 0 ? void 0 : (_error$config3$method = _error$config3.method) === null || _error$config3$method === void 0 ? void 0 : _error$config3$method.toUpperCase(),\n    data: (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data,\n    headers: (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.headers\n  });\n\n  // Handle specific error types\n  if (((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.status) === 404) {\n    console.error('üö´ 404 Error: API endpoint not found. Check if backend is running and endpoints are correct.');\n    console.error('üîç Attempted URL:', error.config ? `${error.config.baseURL}${error.config.url}` : 'Unknown');\n  } else if (error.code === 'NETWORK_ERROR' || error.message === 'Network Error') {\n    console.error('üåê Network Error: Unable to connect to backend server. Please check your internet connection and try again.');\n  } else if (error.code === 'ECONNREFUSED') {\n    console.error('üîå Connection Refused: Backend server is not running or not accessible.');\n  } else if (error.code === 'ECONNABORTED' || error.message.includes('timeout')) {\n    console.error('‚è∞ Timeout Error: Request took too long to complete. This might be due to network issues or server overload.');\n    console.error('üîç Try again or check your internet connection.');\n  } else if (error.code === 'ERR_NETWORK') {\n    console.error('üåê Network Error: Failed to establish connection. Check your internet connection and try again.');\n  }\n\n  // Only handle 401 errors for non-auth endpoints  \n  if (((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.status) === 401 && !error.config.url.includes('/auth/')) {\n    // Token expired or invalid for protected routes\n    localStorage.removeItem('token');\n    // Don't redirect immediately, let the component handle it\n    console.warn('Token expired, please login again');\n  }\n  return Promise.reject(error);\n});\n\n// Enhanced axios instance with retry mechanism\nconst enhancedAxios = {\n  ...axiosInstance,\n  request: config => retryRequest(config),\n  get: (url, config) => retryRequest({\n    ...config,\n    method: 'get',\n    url\n  }),\n  post: (url, data, config) => retryRequest({\n    ...config,\n    method: 'post',\n    url,\n    data\n  }),\n  put: (url, data, config) => retryRequest({\n    ...config,\n    method: 'put',\n    url,\n    data\n  }),\n  delete: (url, config) => retryRequest({\n    ...config,\n    method: 'delete',\n    url\n  }),\n  patch: (url, data, config) => retryRequest({\n    ...config,\n    method: 'patch',\n    url,\n    data\n  })\n};\nexport default enhancedAxios;","map":{"version":3,"names":["axios","config","axiosInstance","create","baseURL","api","timeout","headers","validateStatus","status","retryRequest","axiosConfig","retryCount","error","retryAttempts","code","response","console","log","Promise","resolve","setTimeout","interceptors","request","use","_config$method","method","toUpperCase","url","fullURL","token","localStorage","getItem","Authorization","reject","data","_error$response","_error$response2","_error$config","_error$config2","_error$config3","_error$config3$method","_error$response3","_error$response4","_error$response5","_error$response6","statusText","message","includes","removeItem","warn","enhancedAxios","get","post","put","delete","patch"],"sources":["C:/Users/Baap/Desktop/campus-event-management/campus-event-frontend/src/utils/axios.js"],"sourcesContent":["import axios from 'axios';\r\nimport config from '../config/config';\r\n\r\n// Create axios instance with base configuration\r\nconst axiosInstance = axios.create({\r\n  baseURL: config.api.baseURL,\r\n  timeout: config.api.timeout,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    'Accept': 'application/json',\r\n  },\r\n  // Add additional configuration for better error handling\r\n  validateStatus: function (status) {\r\n    return status >= 200 && status < 300; // default\r\n  },\r\n});\r\n\r\n// Retry mechanism for failed requests\r\nconst retryRequest = async (axiosConfig, retryCount = 0) => {\r\n  try {\r\n    return await axiosInstance(axiosConfig);\r\n  } catch (error) {\r\n    // Only retry on network errors or timeouts, not on 4xx/5xx responses\r\n    if (retryCount < config.api.retryAttempts && \r\n        (error.code === 'ECONNABORTED' || error.code === 'NETWORK_ERROR' || !error.response)) {\r\n      console.log(`üîÑ Retrying request (attempt ${retryCount + 1}/${config.api.retryAttempts})`);\r\n      await new Promise(resolve => setTimeout(resolve, 1000 * (retryCount + 1))); // Exponential backoff\r\n      return retryRequest(axiosConfig, retryCount + 1);\r\n    }\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Request interceptor to add auth token\r\naxiosInstance.interceptors.request.use(\r\n  (config) => {\r\n    // Debug logging\r\n    console.log('üöÄ API Request:', {\r\n      method: config.method?.toUpperCase(),\r\n      url: config.url,\r\n      baseURL: config.baseURL,\r\n      fullURL: `${config.baseURL}${config.url}`\r\n    });\r\n\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n      console.log('üîë Token added to request');\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.error('‚ùå Request interceptor error:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor to handle errors\r\naxiosInstance.interceptors.response.use(\r\n  (response) => {\r\n    console.log('‚úÖ API Response:', {\r\n      status: response.status,\r\n      url: response.config.url,\r\n      data: response.data\r\n    });\r\n    return response;\r\n  },\r\n  (error) => {\r\n    console.error('‚ùå API Error Details:', {\r\n      status: error.response?.status,\r\n      statusText: error.response?.statusText,\r\n      message: error.message,\r\n      url: error.config?.url,\r\n      baseURL: error.config?.baseURL,\r\n      fullURL: error.config ? `${error.config.baseURL}${error.config.url}` : 'Unknown',\r\n      method: error.config?.method?.toUpperCase(),\r\n      data: error.response?.data,\r\n      headers: error.response?.headers\r\n    });\r\n\r\n    // Handle specific error types\r\n    if (error.response?.status === 404) {\r\n      console.error('üö´ 404 Error: API endpoint not found. Check if backend is running and endpoints are correct.');\r\n      console.error('üîç Attempted URL:', error.config ? `${error.config.baseURL}${error.config.url}` : 'Unknown');\r\n    } else if (error.code === 'NETWORK_ERROR' || error.message === 'Network Error') {\r\n      console.error('üåê Network Error: Unable to connect to backend server. Please check your internet connection and try again.');\r\n    } else if (error.code === 'ECONNREFUSED') {\r\n      console.error('üîå Connection Refused: Backend server is not running or not accessible.');\r\n    } else if (error.code === 'ECONNABORTED' || error.message.includes('timeout')) {\r\n      console.error('‚è∞ Timeout Error: Request took too long to complete. This might be due to network issues or server overload.');\r\n      console.error('üîç Try again or check your internet connection.');\r\n    } else if (error.code === 'ERR_NETWORK') {\r\n      console.error('üåê Network Error: Failed to establish connection. Check your internet connection and try again.');\r\n    }\r\n\r\n    // Only handle 401 errors for non-auth endpoints  \r\n    if (error.response?.status === 401 && !error.config.url.includes('/auth/')) {\r\n      // Token expired or invalid for protected routes\r\n      localStorage.removeItem('token');\r\n      // Don't redirect immediately, let the component handle it\r\n      console.warn('Token expired, please login again');\r\n    }\r\n    \r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Enhanced axios instance with retry mechanism\r\nconst enhancedAxios = {\r\n  ...axiosInstance,\r\n  request: (config) => retryRequest(config),\r\n  get: (url, config) => retryRequest({ ...config, method: 'get', url }),\r\n  post: (url, data, config) => retryRequest({ ...config, method: 'post', url, data }),\r\n  put: (url, data, config) => retryRequest({ ...config, method: 'put', url, data }),\r\n  delete: (url, config) => retryRequest({ ...config, method: 'delete', url }),\r\n  patch: (url, data, config) => retryRequest({ ...config, method: 'patch', url, data }),\r\n};\r\n\r\nexport default enhancedAxios;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}