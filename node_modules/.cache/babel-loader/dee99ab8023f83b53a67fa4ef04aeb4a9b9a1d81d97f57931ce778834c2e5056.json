{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Baap\\\\Desktop\\\\u18\\\\frontend\\\\src\\\\context\\\\SocketContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport { useAuth } from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/createContext();\nexport const SocketProvider = ({\n  children\n}) => {\n  _s();\n  const [socket, setSocket] = useState(null);\n  const [connected, setConnected] = useState(false);\n  const {\n    user\n  } = useAuth();\n  useEffect(() => {\n    if (user) {\n      const newSocket = io(process.env.REACT_APP_SOCKET_URL || 'http://localhost:5000', {\n        auth: {\n          userId: user._id\n        }\n      });\n\n      // Connection event handlers\n      newSocket.on('connect', () => {\n        console.log('Socket connected:', newSocket.id);\n        setConnected(true);\n\n        // Join user's personal room\n        newSocket.emit('join', user._id);\n      });\n      newSocket.on('disconnect', () => {\n        console.log('Socket disconnected');\n        setConnected(false);\n      });\n      newSocket.on('connect_error', error => {\n        console.error('Socket connection error:', error);\n        setConnected(false);\n      });\n      setSocket(newSocket);\n      return () => {\n        newSocket.close();\n        setSocket(null);\n        setConnected(false);\n      };\n    } else {\n      if (socket) {\n        socket.close();\n        setSocket(null);\n        setConnected(false);\n      }\n    }\n  }, [user, socket]);\n\n  // Send notification\n  const sendNotification = data => {\n    if (socket && connected) {\n      socket.emit('send_notification', data);\n    }\n  };\n\n  // Send event update\n  const sendEventUpdate = data => {\n    if (socket && connected) {\n      socket.emit('event_update', data);\n    }\n  };\n\n  // Subscribe to notifications\n  const onNotification = callback => {\n    if (socket) {\n      socket.on('notification', callback);\n\n      // Return cleanup function\n      return () => socket.off('notification', callback);\n    }\n  };\n\n  // Subscribe to event updates\n  const onEventUpdate = callback => {\n    if (socket) {\n      socket.on('event_updated', callback);\n\n      // Return cleanup function\n      return () => socket.off('event_updated', callback);\n    }\n  };\n\n  // Subscribe to real-time registration updates\n  const onRegistrationUpdate = callback => {\n    if (socket) {\n      socket.on('registration_update', callback);\n\n      // Return cleanup function\n      return () => socket.off('registration_update', callback);\n    }\n  };\n\n  // Join event room (for real-time updates during events)\n  const joinEventRoom = eventId => {\n    if (socket && connected) {\n      socket.emit('join_event', eventId);\n    }\n  };\n\n  // Leave event room\n  const leaveEventRoom = eventId => {\n    if (socket && connected) {\n      socket.emit('leave_event', eventId);\n    }\n  };\n\n  // Send message to event room\n  const sendEventMessage = (eventId, message) => {\n    if (socket && connected) {\n      socket.emit('event_message', {\n        eventId,\n        message\n      });\n    }\n  };\n\n  // Subscribe to event messages\n  const onEventMessage = callback => {\n    if (socket) {\n      socket.on('event_message', callback);\n\n      // Return cleanup function\n      return () => socket.off('event_message', callback);\n    }\n  };\n  const value = {\n    socket,\n    connected,\n    sendNotification,\n    sendEventUpdate,\n    onNotification,\n    onEventUpdate,\n    onRegistrationUpdate,\n    joinEventRoom,\n    leaveEventRoom,\n    sendEventMessage,\n    onEventMessage\n  };\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n};\n_s(SocketProvider, \"OKPP+mnOeJfwAAivly0/xMlqf4U=\", false, function () {\n  return [useAuth];\n});\n_c = SocketProvider;\nexport const useSocket = () => {\n  _s2();\n  const context = useContext(SocketContext);\n  if (!context) {\n    throw new Error('useSocket must be used within a SocketProvider');\n  }\n  return context;\n};\n_s2(useSocket, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default SocketContext;\nvar _c;\n$RefreshReg$(_c, \"SocketProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","io","useAuth","jsxDEV","_jsxDEV","SocketContext","SocketProvider","children","_s","socket","setSocket","connected","setConnected","user","newSocket","process","env","REACT_APP_SOCKET_URL","auth","userId","_id","on","console","log","id","emit","error","close","sendNotification","data","sendEventUpdate","onNotification","callback","off","onEventUpdate","onRegistrationUpdate","joinEventRoom","eventId","leaveEventRoom","sendEventMessage","message","onEventMessage","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useSocket","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/Baap/Desktop/u18/frontend/src/context/SocketContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport { useAuth } from './AuthContext';\n\nconst SocketContext = createContext();\n\nexport const SocketProvider = ({ children }) => {\n  const [socket, setSocket] = useState(null);\n  const [connected, setConnected] = useState(false);\n  const { user } = useAuth();\n\n  useEffect(() => {\n    if (user) {\n      \n      const newSocket = io(process.env.REACT_APP_SOCKET_URL || 'http://localhost:5000', {\n        auth: {\n          userId: user._id\n        }\n      });\n\n      // Connection event handlers\n      newSocket.on('connect', () => {\n        console.log('Socket connected:', newSocket.id);\n        setConnected(true);\n        \n        // Join user's personal room\n        newSocket.emit('join', user._id);\n      });\n\n      newSocket.on('disconnect', () => {\n        console.log('Socket disconnected');\n        setConnected(false);\n      });\n\n      newSocket.on('connect_error', (error) => {\n        console.error('Socket connection error:', error);\n        setConnected(false);\n      });\n\n      setSocket(newSocket);\n\n      return () => {\n        newSocket.close();\n        setSocket(null);\n        setConnected(false);\n      };\n    } else {\n      \n      if (socket) {\n        socket.close();\n        setSocket(null);\n        setConnected(false);\n      }\n    }\n  }, [user, socket]);\n\n  // Send notification\n  const sendNotification = (data) => {\n    if (socket && connected) {\n      socket.emit('send_notification', data);\n    }\n  };\n\n  // Send event update\n  const sendEventUpdate = (data) => {\n    if (socket && connected) {\n      socket.emit('event_update', data);\n    }\n  };\n\n  // Subscribe to notifications\n  const onNotification = (callback) => {\n    if (socket) {\n      socket.on('notification', callback);\n      \n      // Return cleanup function\n      return () => socket.off('notification', callback);\n    }\n  };\n\n  // Subscribe to event updates\n  const onEventUpdate = (callback) => {\n    if (socket) {\n      socket.on('event_updated', callback);\n      \n      // Return cleanup function\n      return () => socket.off('event_updated', callback);\n    }\n  };\n\n  // Subscribe to real-time registration updates\n  const onRegistrationUpdate = (callback) => {\n    if (socket) {\n      socket.on('registration_update', callback);\n      \n      // Return cleanup function\n      return () => socket.off('registration_update', callback);\n    }\n  };\n\n  // Join event room (for real-time updates during events)\n  const joinEventRoom = (eventId) => {\n    if (socket && connected) {\n      socket.emit('join_event', eventId);\n    }\n  };\n\n  // Leave event room\n  const leaveEventRoom = (eventId) => {\n    if (socket && connected) {\n      socket.emit('leave_event', eventId);\n    }\n  };\n\n  // Send message to event room\n  const sendEventMessage = (eventId, message) => {\n    if (socket && connected) {\n      socket.emit('event_message', { eventId, message });\n    }\n  };\n\n  // Subscribe to event messages\n  const onEventMessage = (callback) => {\n    if (socket) {\n      socket.on('event_message', callback);\n      \n      // Return cleanup function\n      return () => socket.off('event_message', callback);\n    }\n  };\n\n  const value = {\n    socket,\n    connected,\n    sendNotification,\n    sendEventUpdate,\n    onNotification,\n    onEventUpdate,\n    onRegistrationUpdate,\n    joinEventRoom,\n    leaveEventRoom,\n    sendEventMessage,\n    onEventMessage\n  };\n\n  return (\n    <SocketContext.Provider value={value}>\n      {children}\n    </SocketContext.Provider>\n  );\n};\n\nexport const useSocket = () => {\n  const context = useContext(SocketContext);\n  if (!context) {\n    throw new Error('useSocket must be used within a SocketProvider');\n  }\n  return context;\n};\n\nexport default SocketContext;\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC7E,OAAOC,EAAE,MAAM,kBAAkB;AACjC,SAASC,OAAO,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,aAAa,gBAAGR,aAAa,CAAC,CAAC;AAErC,OAAO,MAAMS,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM;IAAEa;EAAK,CAAC,GAAGX,OAAO,CAAC,CAAC;EAE1BH,SAAS,CAAC,MAAM;IACd,IAAIc,IAAI,EAAE;MAER,MAAMC,SAAS,GAAGb,EAAE,CAACc,OAAO,CAACC,GAAG,CAACC,oBAAoB,IAAI,uBAAuB,EAAE;QAChFC,IAAI,EAAE;UACJC,MAAM,EAAEN,IAAI,CAACO;QACf;MACF,CAAC,CAAC;;MAEF;MACAN,SAAS,CAACO,EAAE,CAAC,SAAS,EAAE,MAAM;QAC5BC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAET,SAAS,CAACU,EAAE,CAAC;QAC9CZ,YAAY,CAAC,IAAI,CAAC;;QAElB;QACAE,SAAS,CAACW,IAAI,CAAC,MAAM,EAAEZ,IAAI,CAACO,GAAG,CAAC;MAClC,CAAC,CAAC;MAEFN,SAAS,CAACO,EAAE,CAAC,YAAY,EAAE,MAAM;QAC/BC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;QAClCX,YAAY,CAAC,KAAK,CAAC;MACrB,CAAC,CAAC;MAEFE,SAAS,CAACO,EAAE,CAAC,eAAe,EAAGK,KAAK,IAAK;QACvCJ,OAAO,CAACI,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAChDd,YAAY,CAAC,KAAK,CAAC;MACrB,CAAC,CAAC;MAEFF,SAAS,CAACI,SAAS,CAAC;MAEpB,OAAO,MAAM;QACXA,SAAS,CAACa,KAAK,CAAC,CAAC;QACjBjB,SAAS,CAAC,IAAI,CAAC;QACfE,YAAY,CAAC,KAAK,CAAC;MACrB,CAAC;IACH,CAAC,MAAM;MAEL,IAAIH,MAAM,EAAE;QACVA,MAAM,CAACkB,KAAK,CAAC,CAAC;QACdjB,SAAS,CAAC,IAAI,CAAC;QACfE,YAAY,CAAC,KAAK,CAAC;MACrB;IACF;EACF,CAAC,EAAE,CAACC,IAAI,EAAEJ,MAAM,CAAC,CAAC;;EAElB;EACA,MAAMmB,gBAAgB,GAAIC,IAAI,IAAK;IACjC,IAAIpB,MAAM,IAAIE,SAAS,EAAE;MACvBF,MAAM,CAACgB,IAAI,CAAC,mBAAmB,EAAEI,IAAI,CAAC;IACxC;EACF,CAAC;;EAED;EACA,MAAMC,eAAe,GAAID,IAAI,IAAK;IAChC,IAAIpB,MAAM,IAAIE,SAAS,EAAE;MACvBF,MAAM,CAACgB,IAAI,CAAC,cAAc,EAAEI,IAAI,CAAC;IACnC;EACF,CAAC;;EAED;EACA,MAAME,cAAc,GAAIC,QAAQ,IAAK;IACnC,IAAIvB,MAAM,EAAE;MACVA,MAAM,CAACY,EAAE,CAAC,cAAc,EAAEW,QAAQ,CAAC;;MAEnC;MACA,OAAO,MAAMvB,MAAM,CAACwB,GAAG,CAAC,cAAc,EAAED,QAAQ,CAAC;IACnD;EACF,CAAC;;EAED;EACA,MAAME,aAAa,GAAIF,QAAQ,IAAK;IAClC,IAAIvB,MAAM,EAAE;MACVA,MAAM,CAACY,EAAE,CAAC,eAAe,EAAEW,QAAQ,CAAC;;MAEpC;MACA,OAAO,MAAMvB,MAAM,CAACwB,GAAG,CAAC,eAAe,EAAED,QAAQ,CAAC;IACpD;EACF,CAAC;;EAED;EACA,MAAMG,oBAAoB,GAAIH,QAAQ,IAAK;IACzC,IAAIvB,MAAM,EAAE;MACVA,MAAM,CAACY,EAAE,CAAC,qBAAqB,EAAEW,QAAQ,CAAC;;MAE1C;MACA,OAAO,MAAMvB,MAAM,CAACwB,GAAG,CAAC,qBAAqB,EAAED,QAAQ,CAAC;IAC1D;EACF,CAAC;;EAED;EACA,MAAMI,aAAa,GAAIC,OAAO,IAAK;IACjC,IAAI5B,MAAM,IAAIE,SAAS,EAAE;MACvBF,MAAM,CAACgB,IAAI,CAAC,YAAY,EAAEY,OAAO,CAAC;IACpC;EACF,CAAC;;EAED;EACA,MAAMC,cAAc,GAAID,OAAO,IAAK;IAClC,IAAI5B,MAAM,IAAIE,SAAS,EAAE;MACvBF,MAAM,CAACgB,IAAI,CAAC,aAAa,EAAEY,OAAO,CAAC;IACrC;EACF,CAAC;;EAED;EACA,MAAME,gBAAgB,GAAGA,CAACF,OAAO,EAAEG,OAAO,KAAK;IAC7C,IAAI/B,MAAM,IAAIE,SAAS,EAAE;MACvBF,MAAM,CAACgB,IAAI,CAAC,eAAe,EAAE;QAAEY,OAAO;QAAEG;MAAQ,CAAC,CAAC;IACpD;EACF,CAAC;;EAED;EACA,MAAMC,cAAc,GAAIT,QAAQ,IAAK;IACnC,IAAIvB,MAAM,EAAE;MACVA,MAAM,CAACY,EAAE,CAAC,eAAe,EAAEW,QAAQ,CAAC;;MAEpC;MACA,OAAO,MAAMvB,MAAM,CAACwB,GAAG,CAAC,eAAe,EAAED,QAAQ,CAAC;IACpD;EACF,CAAC;EAED,MAAMU,KAAK,GAAG;IACZjC,MAAM;IACNE,SAAS;IACTiB,gBAAgB;IAChBE,eAAe;IACfC,cAAc;IACdG,aAAa;IACbC,oBAAoB;IACpBC,aAAa;IACbE,cAAc;IACdC,gBAAgB;IAChBE;EACF,CAAC;EAED,oBACErC,OAAA,CAACC,aAAa,CAACsC,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAnC,QAAA,EAClCA;EAAQ;IAAAqC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE7B,CAAC;AAACvC,EAAA,CAhJWF,cAAc;EAAA,QAGRJ,OAAO;AAAA;AAAA8C,EAAA,GAHb1C,cAAc;AAkJ3B,OAAO,MAAM2C,SAAS,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC7B,MAAMC,OAAO,GAAGrD,UAAU,CAACO,aAAa,CAAC;EACzC,IAAI,CAAC8C,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,gDAAgD,CAAC;EACnE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,SAAS;AAQtB,eAAe5C,aAAa;AAAC,IAAA2C,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}