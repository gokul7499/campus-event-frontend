{"ast":null,"code":"import _objectSpread from\"C:/Users/Baap/Desktop/campus-event-management/campus-event-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useCallback}from'react';import{Container,Row,Col,Card,Button,Badge,Form,ListGroup,Spinner,Modal,Dropdown}from'react-bootstrap';import{toast}from'react-toastify';import axios from'../../utils/axios';import LoadingSpinner from'../../components/common/LoadingSpinner';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const NotificationsPage=()=>{const[notifications,setNotifications]=useState([]);const[loading,setLoading]=useState(true);const[unreadCount,setUnreadCount]=useState(0);const[filter,setFilter]=useState('all');// all, unread, read\nconst[typeFilter,setTypeFilter]=useState('all');const[selectedNotification,setSelectedNotification]=useState(null);const[showModal,setShowModal]=useState(false);const[markingAsRead,setMarkingAsRead]=useState(false);const fetchNotifications=useCallback(async()=>{try{var _unreadResponse$data$;setLoading(true);const params=new URLSearchParams();if(filter==='unread')params.append('isRead','false');if(filter==='read')params.append('isRead','true');if(typeFilter!=='all')params.append('type',typeFilter);const response=await axios.get(\"/api/notifications?\".concat(params));setNotifications(response.data.data||[]);// Get unread count\nconst unreadResponse=await axios.get('/api/notifications?isRead=false&limit=1');setUnreadCount(((_unreadResponse$data$=unreadResponse.data.pagination)===null||_unreadResponse$data$===void 0?void 0:_unreadResponse$data$.totalItems)||0);}catch(error){console.error('Error fetching notifications:',error);toast.error('Failed to load notifications');}finally{setLoading(false);}},[filter,typeFilter]);useEffect(()=>{fetchNotifications();},[fetchNotifications]);const handleMarkAsRead=async notificationId=>{try{await axios.put(\"/api/notifications/\".concat(notificationId,\"/read\"));// Update local state\nsetNotifications(prev=>prev.map(notif=>notif._id===notificationId?_objectSpread(_objectSpread({},notif),{},{isRead:true,readAt:new Date()}):notif));setUnreadCount(prev=>Math.max(0,prev-1));toast.success('Notification marked as read');}catch(error){console.error('Error marking notification as read:',error);toast.error('Failed to mark notification as read');}};const handleMarkAllAsRead=async()=>{try{setMarkingAsRead(true);await axios.put('/api/notifications/read-all');// Update local state\nsetNotifications(prev=>prev.map(notif=>_objectSpread(_objectSpread({},notif),{},{isRead:true,readAt:new Date()})));setUnreadCount(0);toast.success('All notifications marked as read');}catch(error){console.error('Error marking all notifications as read:',error);toast.error('Failed to mark all notifications as read');}finally{setMarkingAsRead(false);}};const handleDeleteNotification=async notificationId=>{try{await axios.delete(\"/api/notifications/\".concat(notificationId));// Update local state\nconst deletedNotification=notifications.find(n=>n._id===notificationId);setNotifications(prev=>prev.filter(n=>n._id!==notificationId));if(deletedNotification&&!deletedNotification.isRead){setUnreadCount(prev=>Math.max(0,prev-1));}toast.success('Notification deleted');}catch(error){console.error('Error deleting notification:',error);toast.error('Failed to delete notification');}};const handleNotificationClick=notification=>{setSelectedNotification(notification);setShowModal(true);// Mark as read if unread\nif(!notification.isRead){handleMarkAsRead(notification._id);}};const getNotificationIcon=type=>{const iconMap={event_registration:'bi-calendar-check',event_reminder:'bi-clock',event_update:'bi-pencil-square',event_cancellation:'bi-x-circle',event_approval:'bi-check-circle',event_rejection:'bi-x-circle',system_announcement:'bi-megaphone',password_reset:'bi-key',account_verification:'bi-shield-check',general:'bi-info-circle'};return iconMap[type]||'bi-bell';};const getNotificationColor=type=>{const colorMap={event_registration:'success',event_reminder:'warning',event_update:'info',event_cancellation:'danger',event_approval:'success',event_rejection:'danger',system_announcement:'primary',password_reset:'warning',account_verification:'info',general:'secondary'};return colorMap[type]||'secondary';};const formatNotificationType=type=>{return type.split('_').map(word=>word.charAt(0).toUpperCase()+word.slice(1)).join(' ');};if(loading&&notifications.length===0){return/*#__PURE__*/_jsx(LoadingSpinner,{});}return/*#__PURE__*/_jsxs(Container,{className:\"py-4\",children:[/*#__PURE__*/_jsx(Row,{className:\"mb-4\",children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between align-items-center\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"mb-1\",children:\"Notifications\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-muted mb-0\",children:unreadCount>0?\"\".concat(unreadCount,\" unread notifications\"):'All caught up!'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex gap-2\",children:[/*#__PURE__*/_jsx(Button,{variant:\"outline-primary\",onClick:fetchNotifications,disabled:loading,children:loading?/*#__PURE__*/_jsx(Spinner,{size:\"sm\"}):/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-arrow-clockwise\"})}),unreadCount>0&&/*#__PURE__*/_jsxs(Button,{variant:\"primary\",onClick:handleMarkAllAsRead,disabled:markingAsRead,children:[markingAsRead?/*#__PURE__*/_jsx(Spinner,{size:\"sm\",className:\"me-2\"}):null,\"Mark All Read\"]})]})]})})}),/*#__PURE__*/_jsx(Row,{className:\"mb-4\",children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(Card,{className:\"border-0 shadow-sm\",children:/*#__PURE__*/_jsx(Card.Body,{children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsxs(Col,{md:6,className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Filter by Status\"}),/*#__PURE__*/_jsxs(Form.Select,{value:filter,onChange:e=>setFilter(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"all\",children:\"All Notifications\"}),/*#__PURE__*/_jsx(\"option\",{value:\"unread\",children:\"Unread Only\"}),/*#__PURE__*/_jsx(\"option\",{value:\"read\",children:\"Read Only\"})]})]}),/*#__PURE__*/_jsxs(Col,{md:6,className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Filter by Type\"}),/*#__PURE__*/_jsxs(Form.Select,{value:typeFilter,onChange:e=>setTypeFilter(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"all\",children:\"All Types\"}),/*#__PURE__*/_jsx(\"option\",{value:\"event_registration\",children:\"Event Registration\"}),/*#__PURE__*/_jsx(\"option\",{value:\"event_reminder\",children:\"Event Reminder\"}),/*#__PURE__*/_jsx(\"option\",{value:\"event_update\",children:\"Event Update\"}),/*#__PURE__*/_jsx(\"option\",{value:\"event_cancellation\",children:\"Event Cancellation\"}),/*#__PURE__*/_jsx(\"option\",{value:\"system_announcement\",children:\"System Announcement\"}),/*#__PURE__*/_jsx(\"option\",{value:\"general\",children:\"General\"})]})]})]})})})})}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsxs(Card,{className:\"border-0 shadow-sm\",children:[/*#__PURE__*/_jsx(Card.Header,{className:\"bg-white border-0 py-3\",children:/*#__PURE__*/_jsx(\"h5\",{className:\"mb-0\",children:\"Your Notifications\"})}),/*#__PURE__*/_jsx(Card.Body,{className:\"p-0\",children:loading?/*#__PURE__*/_jsx(\"div\",{className:\"text-center py-4\",children:/*#__PURE__*/_jsx(Spinner,{animation:\"border\"})}):notifications.length>0?/*#__PURE__*/_jsx(ListGroup,{variant:\"flush\",children:notifications.map(notification=>/*#__PURE__*/_jsx(ListGroup.Item,{className:\"notification-item \".concat(!notification.isRead?'notification-unread':''),style:{cursor:'pointer'},onClick:()=>handleNotificationClick(notification),children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex align-items-start\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex-shrink-0 me-3\",children:/*#__PURE__*/_jsx(\"div\",{className:\"bg-\".concat(getNotificationColor(notification.type),\" bg-opacity-10 rounded-circle d-flex align-items-center justify-content-center\"),style:{width:'40px',height:'40px'},children:/*#__PURE__*/_jsx(\"i\",{className:\"\".concat(getNotificationIcon(notification.type),\" text-\").concat(getNotificationColor(notification.type))})})}),/*#__PURE__*/_jsx(\"div\",{className:\"flex-grow-1\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between align-items-start\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h6\",{className:\"mb-1\",children:notification.title}),/*#__PURE__*/_jsx(\"p\",{className:\"mb-1 text-muted\",children:notification.message}),/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex align-items-center gap-3\",children:[/*#__PURE__*/_jsxs(\"small\",{className:\"text-muted\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-clock me-1\"}),new Date(notification.createdAt).toLocaleString()]}),/*#__PURE__*/_jsx(Badge,{bg:getNotificationColor(notification.type),className:\"small\",children:formatNotificationType(notification.type)}),!notification.isRead&&/*#__PURE__*/_jsx(Badge,{bg:\"primary\",className:\"small\",children:\"New\"})]})]}),/*#__PURE__*/_jsxs(Dropdown,{onClick:e=>e.stopPropagation(),children:[/*#__PURE__*/_jsx(Dropdown.Toggle,{variant:\"link\",size:\"sm\",className:\"text-muted\",children:/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-three-dots-vertical\"})}),/*#__PURE__*/_jsxs(Dropdown.Menu,{children:[!notification.isRead&&/*#__PURE__*/_jsxs(Dropdown.Item,{onClick:()=>handleMarkAsRead(notification._id),children:[/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-check me-2\"}),\"Mark as Read\"]}),/*#__PURE__*/_jsxs(Dropdown.Item,{className:\"text-danger\",onClick:()=>handleDeleteNotification(notification._id),children:[/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-trash me-2\"}),\"Delete\"]})]})]})]})})]})},notification._id))}):/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-5\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-bell-slash text-muted\",style:{fontSize:'3rem'}}),/*#__PURE__*/_jsx(\"h4\",{className:\"mt-3\",children:\"No Notifications\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-muted\",children:filter==='unread'?'No unread notifications':'You have no notifications yet.'})]})})]})})}),/*#__PURE__*/_jsxs(Modal,{show:showModal,onHide:()=>setShowModal(false),size:\"lg\",children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,children:/*#__PURE__*/_jsxs(Modal.Title,{children:[/*#__PURE__*/_jsx(\"i\",{className:\"\".concat(getNotificationIcon(selectedNotification===null||selectedNotification===void 0?void 0:selectedNotification.type),\" me-2\")}),selectedNotification===null||selectedNotification===void 0?void 0:selectedNotification.title]})}),/*#__PURE__*/_jsx(Modal.Body,{children:selectedNotification&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Badge,{bg:getNotificationColor(selectedNotification.type),children:formatNotificationType(selectedNotification.type)}),!selectedNotification.isRead&&/*#__PURE__*/_jsx(Badge,{bg:\"primary\",className:\"ms-2\",children:\"New\"})]}),/*#__PURE__*/_jsx(\"p\",{children:selectedNotification.message}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsxs(\"small\",{className:\"text-muted\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Received:\"}),\" \",new Date(selectedNotification.createdAt).toLocaleString(),selectedNotification.readAt&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"strong\",{children:\"Read:\"}),\" \",new Date(selectedNotification.readAt).toLocaleString()]})]})]})}),/*#__PURE__*/_jsxs(Modal.Footer,{children:[/*#__PURE__*/_jsx(Button,{variant:\"secondary\",onClick:()=>setShowModal(false),children:\"Close\"}),selectedNotification&&!selectedNotification.isRead&&/*#__PURE__*/_jsx(Button,{variant:\"primary\",onClick:()=>{handleMarkAsRead(selectedNotification._id);setShowModal(false);},children:\"Mark as Read\"})]})]})]});};export default NotificationsPage;","map":{"version":3,"names":["React","useState","useEffect","useCallback","Container","Row","Col","Card","Button","Badge","Form","ListGroup","Spinner","Modal","Dropdown","toast","axios","LoadingSpinner","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","NotificationsPage","notifications","setNotifications","loading","setLoading","unreadCount","setUnreadCount","filter","setFilter","typeFilter","setTypeFilter","selectedNotification","setSelectedNotification","showModal","setShowModal","markingAsRead","setMarkingAsRead","fetchNotifications","_unreadResponse$data$","params","URLSearchParams","append","response","get","concat","data","unreadResponse","pagination","totalItems","error","console","handleMarkAsRead","notificationId","put","prev","map","notif","_id","_objectSpread","isRead","readAt","Date","Math","max","success","handleMarkAllAsRead","handleDeleteNotification","delete","deletedNotification","find","n","handleNotificationClick","notification","getNotificationIcon","type","iconMap","event_registration","event_reminder","event_update","event_cancellation","event_approval","event_rejection","system_announcement","password_reset","account_verification","general","getNotificationColor","colorMap","formatNotificationType","split","word","charAt","toUpperCase","slice","join","length","className","children","variant","onClick","disabled","size","Body","md","Label","Select","value","onChange","e","target","Header","animation","Item","style","cursor","width","height","title","message","createdAt","toLocaleString","bg","stopPropagation","Toggle","Menu","fontSize","show","onHide","closeButton","Title","Footer"],"sources":["C:/Users/Baap/Desktop/campus-event-management/campus-event-frontend/src/pages/notifications/NotificationsPage.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { \r\n  Container, Row, Col, Card, Button, Badge, Form, \r\n  ListGroup, Spinner, Modal, Dropdown \r\n} from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport axios from '../../utils/axios';\r\nimport LoadingSpinner from '../../components/common/LoadingSpinner';\r\n\r\nconst NotificationsPage = () => {\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [unreadCount, setUnreadCount] = useState(0);\r\n  const [filter, setFilter] = useState('all'); // all, unread, read\r\n  const [typeFilter, setTypeFilter] = useState('all');\r\n  const [selectedNotification, setSelectedNotification] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [markingAsRead, setMarkingAsRead] = useState(false);\r\n\r\n  const fetchNotifications = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      const params = new URLSearchParams();\r\n      \r\n      if (filter === 'unread') params.append('isRead', 'false');\r\n      if (filter === 'read') params.append('isRead', 'true');\r\n      if (typeFilter !== 'all') params.append('type', typeFilter);\r\n      \r\n      const response = await axios.get(`/api/notifications?${params}`);\r\n      setNotifications(response.data.data || []);\r\n      \r\n      // Get unread count\r\n      const unreadResponse = await axios.get('/api/notifications?isRead=false&limit=1');\r\n      setUnreadCount(unreadResponse.data.pagination?.totalItems || 0);\r\n      \r\n    } catch (error) {\r\n      console.error('Error fetching notifications:', error);\r\n      toast.error('Failed to load notifications');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [filter, typeFilter]);\r\n\r\n  useEffect(() => {\r\n    fetchNotifications();\r\n  }, [fetchNotifications]);\r\n\r\n  const handleMarkAsRead = async (notificationId) => {\r\n    try {\r\n      await axios.put(`/api/notifications/${notificationId}/read`);\r\n      \r\n      // Update local state\r\n      setNotifications(prev => \r\n        prev.map(notif => \r\n          notif._id === notificationId \r\n            ? { ...notif, isRead: true, readAt: new Date() }\r\n            : notif\r\n        )\r\n      );\r\n      \r\n      setUnreadCount(prev => Math.max(0, prev - 1));\r\n      toast.success('Notification marked as read');\r\n    } catch (error) {\r\n      console.error('Error marking notification as read:', error);\r\n      toast.error('Failed to mark notification as read');\r\n    }\r\n  };\r\n\r\n  const handleMarkAllAsRead = async () => {\r\n    try {\r\n      setMarkingAsRead(true);\r\n      await axios.put('/api/notifications/read-all');\r\n      \r\n      // Update local state\r\n      setNotifications(prev => \r\n        prev.map(notif => ({ ...notif, isRead: true, readAt: new Date() }))\r\n      );\r\n      \r\n      setUnreadCount(0);\r\n      toast.success('All notifications marked as read');\r\n    } catch (error) {\r\n      console.error('Error marking all notifications as read:', error);\r\n      toast.error('Failed to mark all notifications as read');\r\n    } finally {\r\n      setMarkingAsRead(false);\r\n    }\r\n  };\r\n\r\n  const handleDeleteNotification = async (notificationId) => {\r\n    try {\r\n      await axios.delete(`/api/notifications/${notificationId}`);\r\n      \r\n      // Update local state\r\n      const deletedNotification = notifications.find(n => n._id === notificationId);\r\n      setNotifications(prev => prev.filter(n => n._id !== notificationId));\r\n      \r\n      if (deletedNotification && !deletedNotification.isRead) {\r\n        setUnreadCount(prev => Math.max(0, prev - 1));\r\n      }\r\n      \r\n      toast.success('Notification deleted');\r\n    } catch (error) {\r\n      console.error('Error deleting notification:', error);\r\n      toast.error('Failed to delete notification');\r\n    }\r\n  };\r\n\r\n  const handleNotificationClick = (notification) => {\r\n    setSelectedNotification(notification);\r\n    setShowModal(true);\r\n    \r\n    // Mark as read if unread\r\n    if (!notification.isRead) {\r\n      handleMarkAsRead(notification._id);\r\n    }\r\n  };\r\n\r\n  const getNotificationIcon = (type) => {\r\n    const iconMap = {\r\n      event_registration: 'bi-calendar-check',\r\n      event_reminder: 'bi-clock',\r\n      event_update: 'bi-pencil-square',\r\n      event_cancellation: 'bi-x-circle',\r\n      event_approval: 'bi-check-circle',\r\n      event_rejection: 'bi-x-circle',\r\n      system_announcement: 'bi-megaphone',\r\n      password_reset: 'bi-key',\r\n      account_verification: 'bi-shield-check',\r\n      general: 'bi-info-circle'\r\n    };\r\n    return iconMap[type] || 'bi-bell';\r\n  };\r\n\r\n  const getNotificationColor = (type) => {\r\n    const colorMap = {\r\n      event_registration: 'success',\r\n      event_reminder: 'warning',\r\n      event_update: 'info',\r\n      event_cancellation: 'danger',\r\n      event_approval: 'success',\r\n      event_rejection: 'danger',\r\n      system_announcement: 'primary',\r\n      password_reset: 'warning',\r\n      account_verification: 'info',\r\n      general: 'secondary'\r\n    };\r\n    return colorMap[type] || 'secondary';\r\n  };\r\n\r\n  const formatNotificationType = (type) => {\r\n    return type.split('_').map(word => \r\n      word.charAt(0).toUpperCase() + word.slice(1)\r\n    ).join(' ');\r\n  };\r\n\r\n  if (loading && notifications.length === 0) {\r\n    return <LoadingSpinner />;\r\n  }\r\n\r\n  return (\r\n    <Container className=\"py-4\">\r\n      {/* Header */}\r\n      <Row className=\"mb-4\">\r\n        <Col>\r\n          <div className=\"d-flex justify-content-between align-items-center\">\r\n            <div>\r\n              <h1 className=\"mb-1\">Notifications</h1>\r\n              <p className=\"text-muted mb-0\">\r\n                {unreadCount > 0 ? `${unreadCount} unread notifications` : 'All caught up!'}\r\n              </p>\r\n            </div>\r\n            <div className=\"d-flex gap-2\">\r\n              <Button \r\n                variant=\"outline-primary\" \r\n                onClick={fetchNotifications}\r\n                disabled={loading}\r\n              >\r\n                {loading ? <Spinner size=\"sm\" /> : <i className=\"bi bi-arrow-clockwise\"></i>}\r\n              </Button>\r\n              {unreadCount > 0 && (\r\n                <Button \r\n                  variant=\"primary\" \r\n                  onClick={handleMarkAllAsRead}\r\n                  disabled={markingAsRead}\r\n                >\r\n                  {markingAsRead ? <Spinner size=\"sm\" className=\"me-2\" /> : null}\r\n                  Mark All Read\r\n                </Button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* Filters */}\r\n      <Row className=\"mb-4\">\r\n        <Col>\r\n          <Card className=\"border-0 shadow-sm\">\r\n            <Card.Body>\r\n              <Row>\r\n                <Col md={6} className=\"mb-3\">\r\n                  <Form.Label>Filter by Status</Form.Label>\r\n                  <Form.Select\r\n                    value={filter}\r\n                    onChange={(e) => setFilter(e.target.value)}\r\n                  >\r\n                    <option value=\"all\">All Notifications</option>\r\n                    <option value=\"unread\">Unread Only</option>\r\n                    <option value=\"read\">Read Only</option>\r\n                  </Form.Select>\r\n                </Col>\r\n                <Col md={6} className=\"mb-3\">\r\n                  <Form.Label>Filter by Type</Form.Label>\r\n                  <Form.Select\r\n                    value={typeFilter}\r\n                    onChange={(e) => setTypeFilter(e.target.value)}\r\n                  >\r\n                    <option value=\"all\">All Types</option>\r\n                    <option value=\"event_registration\">Event Registration</option>\r\n                    <option value=\"event_reminder\">Event Reminder</option>\r\n                    <option value=\"event_update\">Event Update</option>\r\n                    <option value=\"event_cancellation\">Event Cancellation</option>\r\n                    <option value=\"system_announcement\">System Announcement</option>\r\n                    <option value=\"general\">General</option>\r\n                  </Form.Select>\r\n                </Col>\r\n              </Row>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* Notifications List */}\r\n      <Row>\r\n        <Col>\r\n          <Card className=\"border-0 shadow-sm\">\r\n            <Card.Header className=\"bg-white border-0 py-3\">\r\n              <h5 className=\"mb-0\">Your Notifications</h5>\r\n            </Card.Header>\r\n            <Card.Body className=\"p-0\">\r\n              {loading ? (\r\n                <div className=\"text-center py-4\">\r\n                  <Spinner animation=\"border\" />\r\n                </div>\r\n              ) : notifications.length > 0 ? (\r\n                <ListGroup variant=\"flush\">\r\n                  {notifications.map(notification => (\r\n                    <ListGroup.Item\r\n                      key={notification._id}\r\n                      className={`notification-item ${!notification.isRead ? 'notification-unread' : ''}`}\r\n                      style={{ cursor: 'pointer' }}\r\n                      onClick={() => handleNotificationClick(notification)}\r\n                    >\r\n                      <div className=\"d-flex align-items-start\">\r\n                        <div className=\"flex-shrink-0 me-3\">\r\n                          <div className={`bg-${getNotificationColor(notification.type)} bg-opacity-10 rounded-circle d-flex align-items-center justify-content-center`} style={{ width: '40px', height: '40px' }}>\r\n                            <i className={`${getNotificationIcon(notification.type)} text-${getNotificationColor(notification.type)}`}></i>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"flex-grow-1\">\r\n                          <div className=\"d-flex justify-content-between align-items-start\">\r\n                            <div>\r\n                              <h6 className=\"mb-1\">{notification.title}</h6>\r\n                              <p className=\"mb-1 text-muted\">{notification.message}</p>\r\n                              <div className=\"d-flex align-items-center gap-3\">\r\n                                <small className=\"text-muted\">\r\n                                  <i className=\"bi bi-clock me-1\"></i>\r\n                                  {new Date(notification.createdAt).toLocaleString()}\r\n                                </small>\r\n                                <Badge bg={getNotificationColor(notification.type)} className=\"small\">\r\n                                  {formatNotificationType(notification.type)}\r\n                                </Badge>\r\n                                {!notification.isRead && (\r\n                                  <Badge bg=\"primary\" className=\"small\">New</Badge>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            <Dropdown onClick={(e) => e.stopPropagation()}>\r\n                              <Dropdown.Toggle variant=\"link\" size=\"sm\" className=\"text-muted\">\r\n                                <i className=\"bi bi-three-dots-vertical\"></i>\r\n                              </Dropdown.Toggle>\r\n                              <Dropdown.Menu>\r\n                                {!notification.isRead && (\r\n                                  <Dropdown.Item onClick={() => handleMarkAsRead(notification._id)}>\r\n                                    <i className=\"bi bi-check me-2\"></i>Mark as Read\r\n                                  </Dropdown.Item>\r\n                                )}\r\n                                <Dropdown.Item \r\n                                  className=\"text-danger\"\r\n                                  onClick={() => handleDeleteNotification(notification._id)}\r\n                                >\r\n                                  <i className=\"bi bi-trash me-2\"></i>Delete\r\n                                </Dropdown.Item>\r\n                              </Dropdown.Menu>\r\n                            </Dropdown>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              ) : (\r\n                <div className=\"text-center py-5\">\r\n                  <i className=\"bi bi-bell-slash text-muted\" style={{ fontSize: '3rem' }}></i>\r\n                  <h4 className=\"mt-3\">No Notifications</h4>\r\n                  <p className=\"text-muted\">\r\n                    {filter === 'unread' ? 'No unread notifications' : 'You have no notifications yet.'}\r\n                  </p>\r\n                </div>\r\n              )}\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* Notification Detail Modal */}\r\n      <Modal show={showModal} onHide={() => setShowModal(false)} size=\"lg\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            <i className={`${getNotificationIcon(selectedNotification?.type)} me-2`}></i>\r\n            {selectedNotification?.title}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {selectedNotification && (\r\n            <div>\r\n              <div className=\"mb-3\">\r\n                <Badge bg={getNotificationColor(selectedNotification.type)}>\r\n                  {formatNotificationType(selectedNotification.type)}\r\n                </Badge>\r\n                {!selectedNotification.isRead && (\r\n                  <Badge bg=\"primary\" className=\"ms-2\">New</Badge>\r\n                )}\r\n              </div>\r\n              <p>{selectedNotification.message}</p>\r\n              <hr />\r\n              <small className=\"text-muted\">\r\n                <strong>Received:</strong> {new Date(selectedNotification.createdAt).toLocaleString()}\r\n                {selectedNotification.readAt && (\r\n                  <>\r\n                    <br />\r\n                    <strong>Read:</strong> {new Date(selectedNotification.readAt).toLocaleString()}\r\n                  </>\r\n                )}\r\n              </small>\r\n            </div>\r\n          )}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\r\n            Close\r\n          </Button>\r\n          {selectedNotification && !selectedNotification.isRead && (\r\n            <Button \r\n              variant=\"primary\" \r\n              onClick={() => {\r\n                handleMarkAsRead(selectedNotification._id);\r\n                setShowModal(false);\r\n              }}\r\n            >\r\n              Mark as Read\r\n            </Button>\r\n          )}\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default NotificationsPage;\r\n"],"mappings":"wJAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,CAAEC,WAAW,KAAQ,OAAO,CAC/D,OACEC,SAAS,CAAEC,GAAG,CAAEC,GAAG,CAAEC,IAAI,CAAEC,MAAM,CAAEC,KAAK,CAAEC,IAAI,CAC9CC,SAAS,CAAEC,OAAO,CAAEC,KAAK,CAAEC,QAAQ,KAC9B,iBAAiB,CACxB,OAASC,KAAK,KAAQ,gBAAgB,CACtC,MAAO,CAAAC,KAAK,KAAM,mBAAmB,CACrC,MAAO,CAAAC,cAAc,KAAM,wCAAwC,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAEpE,KAAM,CAAAC,iBAAiB,CAAGA,CAAA,GAAM,CAC9B,KAAM,CAACC,aAAa,CAAEC,gBAAgB,CAAC,CAAGzB,QAAQ,CAAC,EAAE,CAAC,CACtD,KAAM,CAAC0B,OAAO,CAAEC,UAAU,CAAC,CAAG3B,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAAC4B,WAAW,CAAEC,cAAc,CAAC,CAAG7B,QAAQ,CAAC,CAAC,CAAC,CACjD,KAAM,CAAC8B,MAAM,CAAEC,SAAS,CAAC,CAAG/B,QAAQ,CAAC,KAAK,CAAC,CAAE;AAC7C,KAAM,CAACgC,UAAU,CAAEC,aAAa,CAAC,CAAGjC,QAAQ,CAAC,KAAK,CAAC,CACnD,KAAM,CAACkC,oBAAoB,CAAEC,uBAAuB,CAAC,CAAGnC,QAAQ,CAAC,IAAI,CAAC,CACtE,KAAM,CAACoC,SAAS,CAAEC,YAAY,CAAC,CAAGrC,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAACsC,aAAa,CAAEC,gBAAgB,CAAC,CAAGvC,QAAQ,CAAC,KAAK,CAAC,CAEzD,KAAM,CAAAwC,kBAAkB,CAAGtC,WAAW,CAAC,SAAY,CACjD,GAAI,KAAAuC,qBAAA,CACFd,UAAU,CAAC,IAAI,CAAC,CAChB,KAAM,CAAAe,MAAM,CAAG,GAAI,CAAAC,eAAe,CAAC,CAAC,CAEpC,GAAIb,MAAM,GAAK,QAAQ,CAAEY,MAAM,CAACE,MAAM,CAAC,QAAQ,CAAE,OAAO,CAAC,CACzD,GAAId,MAAM,GAAK,MAAM,CAAEY,MAAM,CAACE,MAAM,CAAC,QAAQ,CAAE,MAAM,CAAC,CACtD,GAAIZ,UAAU,GAAK,KAAK,CAAEU,MAAM,CAACE,MAAM,CAAC,MAAM,CAAEZ,UAAU,CAAC,CAE3D,KAAM,CAAAa,QAAQ,CAAG,KAAM,CAAA9B,KAAK,CAAC+B,GAAG,uBAAAC,MAAA,CAAuBL,MAAM,CAAE,CAAC,CAChEjB,gBAAgB,CAACoB,QAAQ,CAACG,IAAI,CAACA,IAAI,EAAI,EAAE,CAAC,CAE1C;AACA,KAAM,CAAAC,cAAc,CAAG,KAAM,CAAAlC,KAAK,CAAC+B,GAAG,CAAC,yCAAyC,CAAC,CACjFjB,cAAc,CAAC,EAAAY,qBAAA,CAAAQ,cAAc,CAACD,IAAI,CAACE,UAAU,UAAAT,qBAAA,iBAA9BA,qBAAA,CAAgCU,UAAU,GAAI,CAAC,CAAC,CAEjE,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,CAAEA,KAAK,CAAC,CACrDtC,KAAK,CAACsC,KAAK,CAAC,8BAA8B,CAAC,CAC7C,CAAC,OAAS,CACRzB,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAAE,CAACG,MAAM,CAAEE,UAAU,CAAC,CAAC,CAExB/B,SAAS,CAAC,IAAM,CACduC,kBAAkB,CAAC,CAAC,CACtB,CAAC,CAAE,CAACA,kBAAkB,CAAC,CAAC,CAExB,KAAM,CAAAc,gBAAgB,CAAG,KAAO,CAAAC,cAAc,EAAK,CACjD,GAAI,CACF,KAAM,CAAAxC,KAAK,CAACyC,GAAG,uBAAAT,MAAA,CAAuBQ,cAAc,SAAO,CAAC,CAE5D;AACA9B,gBAAgB,CAACgC,IAAI,EACnBA,IAAI,CAACC,GAAG,CAACC,KAAK,EACZA,KAAK,CAACC,GAAG,GAAKL,cAAc,CAAAM,aAAA,CAAAA,aAAA,IACnBF,KAAK,MAAEG,MAAM,CAAE,IAAI,CAAEC,MAAM,CAAE,GAAI,CAAAC,IAAI,CAAC,CAAC,GAC5CL,KACN,CACF,CAAC,CAED9B,cAAc,CAAC4B,IAAI,EAAIQ,IAAI,CAACC,GAAG,CAAC,CAAC,CAAET,IAAI,CAAG,CAAC,CAAC,CAAC,CAC7C3C,KAAK,CAACqD,OAAO,CAAC,6BAA6B,CAAC,CAC9C,CAAE,MAAOf,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,qCAAqC,CAAEA,KAAK,CAAC,CAC3DtC,KAAK,CAACsC,KAAK,CAAC,qCAAqC,CAAC,CACpD,CACF,CAAC,CAED,KAAM,CAAAgB,mBAAmB,CAAG,KAAAA,CAAA,GAAY,CACtC,GAAI,CACF7B,gBAAgB,CAAC,IAAI,CAAC,CACtB,KAAM,CAAAxB,KAAK,CAACyC,GAAG,CAAC,6BAA6B,CAAC,CAE9C;AACA/B,gBAAgB,CAACgC,IAAI,EACnBA,IAAI,CAACC,GAAG,CAACC,KAAK,EAAAE,aAAA,CAAAA,aAAA,IAAUF,KAAK,MAAEG,MAAM,CAAE,IAAI,CAAEC,MAAM,CAAE,GAAI,CAAAC,IAAI,CAAC,CAAC,EAAG,CACpE,CAAC,CAEDnC,cAAc,CAAC,CAAC,CAAC,CACjBf,KAAK,CAACqD,OAAO,CAAC,kCAAkC,CAAC,CACnD,CAAE,MAAOf,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,0CAA0C,CAAEA,KAAK,CAAC,CAChEtC,KAAK,CAACsC,KAAK,CAAC,0CAA0C,CAAC,CACzD,CAAC,OAAS,CACRb,gBAAgB,CAAC,KAAK,CAAC,CACzB,CACF,CAAC,CAED,KAAM,CAAA8B,wBAAwB,CAAG,KAAO,CAAAd,cAAc,EAAK,CACzD,GAAI,CACF,KAAM,CAAAxC,KAAK,CAACuD,MAAM,uBAAAvB,MAAA,CAAuBQ,cAAc,CAAE,CAAC,CAE1D;AACA,KAAM,CAAAgB,mBAAmB,CAAG/C,aAAa,CAACgD,IAAI,CAACC,CAAC,EAAIA,CAAC,CAACb,GAAG,GAAKL,cAAc,CAAC,CAC7E9B,gBAAgB,CAACgC,IAAI,EAAIA,IAAI,CAAC3B,MAAM,CAAC2C,CAAC,EAAIA,CAAC,CAACb,GAAG,GAAKL,cAAc,CAAC,CAAC,CAEpE,GAAIgB,mBAAmB,EAAI,CAACA,mBAAmB,CAACT,MAAM,CAAE,CACtDjC,cAAc,CAAC4B,IAAI,EAAIQ,IAAI,CAACC,GAAG,CAAC,CAAC,CAAET,IAAI,CAAG,CAAC,CAAC,CAAC,CAC/C,CAEA3C,KAAK,CAACqD,OAAO,CAAC,sBAAsB,CAAC,CACvC,CAAE,MAAOf,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CACpDtC,KAAK,CAACsC,KAAK,CAAC,+BAA+B,CAAC,CAC9C,CACF,CAAC,CAED,KAAM,CAAAsB,uBAAuB,CAAIC,YAAY,EAAK,CAChDxC,uBAAuB,CAACwC,YAAY,CAAC,CACrCtC,YAAY,CAAC,IAAI,CAAC,CAElB;AACA,GAAI,CAACsC,YAAY,CAACb,MAAM,CAAE,CACxBR,gBAAgB,CAACqB,YAAY,CAACf,GAAG,CAAC,CACpC,CACF,CAAC,CAED,KAAM,CAAAgB,mBAAmB,CAAIC,IAAI,EAAK,CACpC,KAAM,CAAAC,OAAO,CAAG,CACdC,kBAAkB,CAAE,mBAAmB,CACvCC,cAAc,CAAE,UAAU,CAC1BC,YAAY,CAAE,kBAAkB,CAChCC,kBAAkB,CAAE,aAAa,CACjCC,cAAc,CAAE,iBAAiB,CACjCC,eAAe,CAAE,aAAa,CAC9BC,mBAAmB,CAAE,cAAc,CACnCC,cAAc,CAAE,QAAQ,CACxBC,oBAAoB,CAAE,iBAAiB,CACvCC,OAAO,CAAE,gBACX,CAAC,CACD,MAAO,CAAAV,OAAO,CAACD,IAAI,CAAC,EAAI,SAAS,CACnC,CAAC,CAED,KAAM,CAAAY,oBAAoB,CAAIZ,IAAI,EAAK,CACrC,KAAM,CAAAa,QAAQ,CAAG,CACfX,kBAAkB,CAAE,SAAS,CAC7BC,cAAc,CAAE,SAAS,CACzBC,YAAY,CAAE,MAAM,CACpBC,kBAAkB,CAAE,QAAQ,CAC5BC,cAAc,CAAE,SAAS,CACzBC,eAAe,CAAE,QAAQ,CACzBC,mBAAmB,CAAE,SAAS,CAC9BC,cAAc,CAAE,SAAS,CACzBC,oBAAoB,CAAE,MAAM,CAC5BC,OAAO,CAAE,WACX,CAAC,CACD,MAAO,CAAAE,QAAQ,CAACb,IAAI,CAAC,EAAI,WAAW,CACtC,CAAC,CAED,KAAM,CAAAc,sBAAsB,CAAId,IAAI,EAAK,CACvC,MAAO,CAAAA,IAAI,CAACe,KAAK,CAAC,GAAG,CAAC,CAAClC,GAAG,CAACmC,IAAI,EAC7BA,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAAGF,IAAI,CAACG,KAAK,CAAC,CAAC,CAC7C,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,CACb,CAAC,CAED,GAAIvE,OAAO,EAAIF,aAAa,CAAC0E,MAAM,GAAK,CAAC,CAAE,CACzC,mBAAOhF,IAAA,CAACF,cAAc,GAAE,CAAC,CAC3B,CAEA,mBACEI,KAAA,CAACjB,SAAS,EAACgG,SAAS,CAAC,MAAM,CAAAC,QAAA,eAEzBlF,IAAA,CAACd,GAAG,EAAC+F,SAAS,CAAC,MAAM,CAAAC,QAAA,cACnBlF,IAAA,CAACb,GAAG,EAAA+F,QAAA,cACFhF,KAAA,QAAK+E,SAAS,CAAC,mDAAmD,CAAAC,QAAA,eAChEhF,KAAA,QAAAgF,QAAA,eACElF,IAAA,OAAIiF,SAAS,CAAC,MAAM,CAAAC,QAAA,CAAC,eAAa,CAAI,CAAC,cACvClF,IAAA,MAAGiF,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAC3BxE,WAAW,CAAG,CAAC,IAAAmB,MAAA,CAAMnB,WAAW,0BAA0B,gBAAgB,CAC1E,CAAC,EACD,CAAC,cACNR,KAAA,QAAK+E,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3BlF,IAAA,CAACX,MAAM,EACL8F,OAAO,CAAC,iBAAiB,CACzBC,OAAO,CAAE9D,kBAAmB,CAC5B+D,QAAQ,CAAE7E,OAAQ,CAAA0E,QAAA,CAEjB1E,OAAO,cAAGR,IAAA,CAACP,OAAO,EAAC6F,IAAI,CAAC,IAAI,CAAE,CAAC,cAAGtF,IAAA,MAAGiF,SAAS,CAAC,uBAAuB,CAAI,CAAC,CACtE,CAAC,CACRvE,WAAW,CAAG,CAAC,eACdR,KAAA,CAACb,MAAM,EACL8F,OAAO,CAAC,SAAS,CACjBC,OAAO,CAAElC,mBAAoB,CAC7BmC,QAAQ,CAAEjE,aAAc,CAAA8D,QAAA,EAEvB9D,aAAa,cAAGpB,IAAA,CAACP,OAAO,EAAC6F,IAAI,CAAC,IAAI,CAACL,SAAS,CAAC,MAAM,CAAE,CAAC,CAAG,IAAI,CAAC,eAEjE,EAAQ,CACT,EACE,CAAC,EACH,CAAC,CACH,CAAC,CACH,CAAC,cAGNjF,IAAA,CAACd,GAAG,EAAC+F,SAAS,CAAC,MAAM,CAAAC,QAAA,cACnBlF,IAAA,CAACb,GAAG,EAAA+F,QAAA,cACFlF,IAAA,CAACZ,IAAI,EAAC6F,SAAS,CAAC,oBAAoB,CAAAC,QAAA,cAClClF,IAAA,CAACZ,IAAI,CAACmG,IAAI,EAAAL,QAAA,cACRhF,KAAA,CAAChB,GAAG,EAAAgG,QAAA,eACFhF,KAAA,CAACf,GAAG,EAACqG,EAAE,CAAE,CAAE,CAACP,SAAS,CAAC,MAAM,CAAAC,QAAA,eAC1BlF,IAAA,CAACT,IAAI,CAACkG,KAAK,EAAAP,QAAA,CAAC,kBAAgB,CAAY,CAAC,cACzChF,KAAA,CAACX,IAAI,CAACmG,MAAM,EACVC,KAAK,CAAE/E,MAAO,CACdgF,QAAQ,CAAGC,CAAC,EAAKhF,SAAS,CAACgF,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAAAT,QAAA,eAE3ClF,IAAA,WAAQ2F,KAAK,CAAC,KAAK,CAAAT,QAAA,CAAC,mBAAiB,CAAQ,CAAC,cAC9ClF,IAAA,WAAQ2F,KAAK,CAAC,QAAQ,CAAAT,QAAA,CAAC,aAAW,CAAQ,CAAC,cAC3ClF,IAAA,WAAQ2F,KAAK,CAAC,MAAM,CAAAT,QAAA,CAAC,WAAS,CAAQ,CAAC,EAC5B,CAAC,EACX,CAAC,cACNhF,KAAA,CAACf,GAAG,EAACqG,EAAE,CAAE,CAAE,CAACP,SAAS,CAAC,MAAM,CAAAC,QAAA,eAC1BlF,IAAA,CAACT,IAAI,CAACkG,KAAK,EAAAP,QAAA,CAAC,gBAAc,CAAY,CAAC,cACvChF,KAAA,CAACX,IAAI,CAACmG,MAAM,EACVC,KAAK,CAAE7E,UAAW,CAClB8E,QAAQ,CAAGC,CAAC,EAAK9E,aAAa,CAAC8E,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAAAT,QAAA,eAE/ClF,IAAA,WAAQ2F,KAAK,CAAC,KAAK,CAAAT,QAAA,CAAC,WAAS,CAAQ,CAAC,cACtClF,IAAA,WAAQ2F,KAAK,CAAC,oBAAoB,CAAAT,QAAA,CAAC,oBAAkB,CAAQ,CAAC,cAC9DlF,IAAA,WAAQ2F,KAAK,CAAC,gBAAgB,CAAAT,QAAA,CAAC,gBAAc,CAAQ,CAAC,cACtDlF,IAAA,WAAQ2F,KAAK,CAAC,cAAc,CAAAT,QAAA,CAAC,cAAY,CAAQ,CAAC,cAClDlF,IAAA,WAAQ2F,KAAK,CAAC,oBAAoB,CAAAT,QAAA,CAAC,oBAAkB,CAAQ,CAAC,cAC9DlF,IAAA,WAAQ2F,KAAK,CAAC,qBAAqB,CAAAT,QAAA,CAAC,qBAAmB,CAAQ,CAAC,cAChElF,IAAA,WAAQ2F,KAAK,CAAC,SAAS,CAAAT,QAAA,CAAC,SAAO,CAAQ,CAAC,EAC7B,CAAC,EACX,CAAC,EACH,CAAC,CACG,CAAC,CACR,CAAC,CACJ,CAAC,CACH,CAAC,cAGNlF,IAAA,CAACd,GAAG,EAAAgG,QAAA,cACFlF,IAAA,CAACb,GAAG,EAAA+F,QAAA,cACFhF,KAAA,CAACd,IAAI,EAAC6F,SAAS,CAAC,oBAAoB,CAAAC,QAAA,eAClClF,IAAA,CAACZ,IAAI,CAAC2G,MAAM,EAACd,SAAS,CAAC,wBAAwB,CAAAC,QAAA,cAC7ClF,IAAA,OAAIiF,SAAS,CAAC,MAAM,CAAAC,QAAA,CAAC,oBAAkB,CAAI,CAAC,CACjC,CAAC,cACdlF,IAAA,CAACZ,IAAI,CAACmG,IAAI,EAACN,SAAS,CAAC,KAAK,CAAAC,QAAA,CACvB1E,OAAO,cACNR,IAAA,QAAKiF,SAAS,CAAC,kBAAkB,CAAAC,QAAA,cAC/BlF,IAAA,CAACP,OAAO,EAACuG,SAAS,CAAC,QAAQ,CAAE,CAAC,CAC3B,CAAC,CACJ1F,aAAa,CAAC0E,MAAM,CAAG,CAAC,cAC1BhF,IAAA,CAACR,SAAS,EAAC2F,OAAO,CAAC,OAAO,CAAAD,QAAA,CACvB5E,aAAa,CAACkC,GAAG,CAACiB,YAAY,eAC7BzD,IAAA,CAACR,SAAS,CAACyG,IAAI,EAEbhB,SAAS,sBAAApD,MAAA,CAAuB,CAAC4B,YAAY,CAACb,MAAM,CAAG,qBAAqB,CAAG,EAAE,CAAG,CACpFsD,KAAK,CAAE,CAAEC,MAAM,CAAE,SAAU,CAAE,CAC7Bf,OAAO,CAAEA,CAAA,GAAM5B,uBAAuB,CAACC,YAAY,CAAE,CAAAyB,QAAA,cAErDhF,KAAA,QAAK+E,SAAS,CAAC,0BAA0B,CAAAC,QAAA,eACvClF,IAAA,QAAKiF,SAAS,CAAC,oBAAoB,CAAAC,QAAA,cACjClF,IAAA,QAAKiF,SAAS,OAAApD,MAAA,CAAQ0C,oBAAoB,CAACd,YAAY,CAACE,IAAI,CAAC,kFAAiF,CAACuC,KAAK,CAAE,CAAEE,KAAK,CAAE,MAAM,CAAEC,MAAM,CAAE,MAAO,CAAE,CAAAnB,QAAA,cACtLlF,IAAA,MAAGiF,SAAS,IAAApD,MAAA,CAAK6B,mBAAmB,CAACD,YAAY,CAACE,IAAI,CAAC,WAAA9B,MAAA,CAAS0C,oBAAoB,CAACd,YAAY,CAACE,IAAI,CAAC,CAAG,CAAI,CAAC,CAC5G,CAAC,CACH,CAAC,cACN3D,IAAA,QAAKiF,SAAS,CAAC,aAAa,CAAAC,QAAA,cAC1BhF,KAAA,QAAK+E,SAAS,CAAC,kDAAkD,CAAAC,QAAA,eAC/DhF,KAAA,QAAAgF,QAAA,eACElF,IAAA,OAAIiF,SAAS,CAAC,MAAM,CAAAC,QAAA,CAAEzB,YAAY,CAAC6C,KAAK,CAAK,CAAC,cAC9CtG,IAAA,MAAGiF,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAAEzB,YAAY,CAAC8C,OAAO,CAAI,CAAC,cACzDrG,KAAA,QAAK+E,SAAS,CAAC,iCAAiC,CAAAC,QAAA,eAC9ChF,KAAA,UAAO+E,SAAS,CAAC,YAAY,CAAAC,QAAA,eAC3BlF,IAAA,MAAGiF,SAAS,CAAC,kBAAkB,CAAI,CAAC,CACnC,GAAI,CAAAnC,IAAI,CAACW,YAAY,CAAC+C,SAAS,CAAC,CAACC,cAAc,CAAC,CAAC,EAC7C,CAAC,cACRzG,IAAA,CAACV,KAAK,EAACoH,EAAE,CAAEnC,oBAAoB,CAACd,YAAY,CAACE,IAAI,CAAE,CAACsB,SAAS,CAAC,OAAO,CAAAC,QAAA,CAClET,sBAAsB,CAAChB,YAAY,CAACE,IAAI,CAAC,CACrC,CAAC,CACP,CAACF,YAAY,CAACb,MAAM,eACnB5C,IAAA,CAACV,KAAK,EAACoH,EAAE,CAAC,SAAS,CAACzB,SAAS,CAAC,OAAO,CAAAC,QAAA,CAAC,KAAG,CAAO,CACjD,EACE,CAAC,EACH,CAAC,cACNhF,KAAA,CAACP,QAAQ,EAACyF,OAAO,CAAGS,CAAC,EAAKA,CAAC,CAACc,eAAe,CAAC,CAAE,CAAAzB,QAAA,eAC5ClF,IAAA,CAACL,QAAQ,CAACiH,MAAM,EAACzB,OAAO,CAAC,MAAM,CAACG,IAAI,CAAC,IAAI,CAACL,SAAS,CAAC,YAAY,CAAAC,QAAA,cAC9DlF,IAAA,MAAGiF,SAAS,CAAC,2BAA2B,CAAI,CAAC,CAC9B,CAAC,cAClB/E,KAAA,CAACP,QAAQ,CAACkH,IAAI,EAAA3B,QAAA,EACX,CAACzB,YAAY,CAACb,MAAM,eACnB1C,KAAA,CAACP,QAAQ,CAACsG,IAAI,EAACb,OAAO,CAAEA,CAAA,GAAMhD,gBAAgB,CAACqB,YAAY,CAACf,GAAG,CAAE,CAAAwC,QAAA,eAC/DlF,IAAA,MAAGiF,SAAS,CAAC,kBAAkB,CAAI,CAAC,eACtC,EAAe,CAChB,cACD/E,KAAA,CAACP,QAAQ,CAACsG,IAAI,EACZhB,SAAS,CAAC,aAAa,CACvBG,OAAO,CAAEA,CAAA,GAAMjC,wBAAwB,CAACM,YAAY,CAACf,GAAG,CAAE,CAAAwC,QAAA,eAE1DlF,IAAA,MAAGiF,SAAS,CAAC,kBAAkB,CAAI,CAAC,SACtC,EAAe,CAAC,EACH,CAAC,EACR,CAAC,EACR,CAAC,CACH,CAAC,EACH,CAAC,EAjDDxB,YAAY,CAACf,GAkDJ,CACjB,CAAC,CACO,CAAC,cAEZxC,KAAA,QAAK+E,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/BlF,IAAA,MAAGiF,SAAS,CAAC,6BAA6B,CAACiB,KAAK,CAAE,CAAEY,QAAQ,CAAE,MAAO,CAAE,CAAI,CAAC,cAC5E9G,IAAA,OAAIiF,SAAS,CAAC,MAAM,CAAAC,QAAA,CAAC,kBAAgB,CAAI,CAAC,cAC1ClF,IAAA,MAAGiF,SAAS,CAAC,YAAY,CAAAC,QAAA,CACtBtE,MAAM,GAAK,QAAQ,CAAG,yBAAyB,CAAG,gCAAgC,CAClF,CAAC,EACD,CACN,CACQ,CAAC,EACR,CAAC,CACJ,CAAC,CACH,CAAC,cAGNV,KAAA,CAACR,KAAK,EAACqH,IAAI,CAAE7F,SAAU,CAAC8F,MAAM,CAAEA,CAAA,GAAM7F,YAAY,CAAC,KAAK,CAAE,CAACmE,IAAI,CAAC,IAAI,CAAAJ,QAAA,eAClElF,IAAA,CAACN,KAAK,CAACqG,MAAM,EAACkB,WAAW,MAAA/B,QAAA,cACvBhF,KAAA,CAACR,KAAK,CAACwH,KAAK,EAAAhC,QAAA,eACVlF,IAAA,MAAGiF,SAAS,IAAApD,MAAA,CAAK6B,mBAAmB,CAAC1C,oBAAoB,SAApBA,oBAAoB,iBAApBA,oBAAoB,CAAE2C,IAAI,CAAC,SAAQ,CAAI,CAAC,CAC5E3C,oBAAoB,SAApBA,oBAAoB,iBAApBA,oBAAoB,CAAEsF,KAAK,EACjB,CAAC,CACF,CAAC,cACftG,IAAA,CAACN,KAAK,CAAC6F,IAAI,EAAAL,QAAA,CACRlE,oBAAoB,eACnBd,KAAA,QAAAgF,QAAA,eACEhF,KAAA,QAAK+E,SAAS,CAAC,MAAM,CAAAC,QAAA,eACnBlF,IAAA,CAACV,KAAK,EAACoH,EAAE,CAAEnC,oBAAoB,CAACvD,oBAAoB,CAAC2C,IAAI,CAAE,CAAAuB,QAAA,CACxDT,sBAAsB,CAACzD,oBAAoB,CAAC2C,IAAI,CAAC,CAC7C,CAAC,CACP,CAAC3C,oBAAoB,CAAC4B,MAAM,eAC3B5C,IAAA,CAACV,KAAK,EAACoH,EAAE,CAAC,SAAS,CAACzB,SAAS,CAAC,MAAM,CAAAC,QAAA,CAAC,KAAG,CAAO,CAChD,EACE,CAAC,cACNlF,IAAA,MAAAkF,QAAA,CAAIlE,oBAAoB,CAACuF,OAAO,CAAI,CAAC,cACrCvG,IAAA,QAAK,CAAC,cACNE,KAAA,UAAO+E,SAAS,CAAC,YAAY,CAAAC,QAAA,eAC3BlF,IAAA,WAAAkF,QAAA,CAAQ,WAAS,CAAQ,CAAC,IAAC,CAAC,GAAI,CAAApC,IAAI,CAAC9B,oBAAoB,CAACwF,SAAS,CAAC,CAACC,cAAc,CAAC,CAAC,CACpFzF,oBAAoB,CAAC6B,MAAM,eAC1B3C,KAAA,CAAAE,SAAA,EAAA8E,QAAA,eACElF,IAAA,QAAK,CAAC,cACNA,IAAA,WAAAkF,QAAA,CAAQ,OAAK,CAAQ,CAAC,IAAC,CAAC,GAAI,CAAApC,IAAI,CAAC9B,oBAAoB,CAAC6B,MAAM,CAAC,CAAC4D,cAAc,CAAC,CAAC,EAC9E,CACH,EACI,CAAC,EACL,CACN,CACS,CAAC,cACbvG,KAAA,CAACR,KAAK,CAACyH,MAAM,EAAAjC,QAAA,eACXlF,IAAA,CAACX,MAAM,EAAC8F,OAAO,CAAC,WAAW,CAACC,OAAO,CAAEA,CAAA,GAAMjE,YAAY,CAAC,KAAK,CAAE,CAAA+D,QAAA,CAAC,OAEhE,CAAQ,CAAC,CACRlE,oBAAoB,EAAI,CAACA,oBAAoB,CAAC4B,MAAM,eACnD5C,IAAA,CAACX,MAAM,EACL8F,OAAO,CAAC,SAAS,CACjBC,OAAO,CAAEA,CAAA,GAAM,CACbhD,gBAAgB,CAACpB,oBAAoB,CAAC0B,GAAG,CAAC,CAC1CvB,YAAY,CAAC,KAAK,CAAC,CACrB,CAAE,CAAA+D,QAAA,CACH,cAED,CAAQ,CACT,EACW,CAAC,EACV,CAAC,EACC,CAAC,CAEhB,CAAC,CAED,cAAe,CAAA7E,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}